FROM nvidia/cuda:11.1-cudnn8-runtime-ubuntu20.04

# Dockerfile.openpilot_base
ENV PYTHONUNBUFFERED 1

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
    autoconf \
    build-essential \
    bzip2 \
    ca-certificates \
    capnproto \
    libcapnp-dev \
    clang \
    cmake \
    cppcheck \
    curl \
    ffmpeg \
    git \
    iputils-ping \
    libarchive-dev \
    libbz2-dev \
    libcurl4-openssl-dev \
    libeigen3-dev \
    libffi-dev \
    libglew-dev \
    libgles2-mesa-dev \
    libglib2.0-0 \
    liblzma-dev \
    libomp-dev \
    libopencv-dev \
    libssl-dev \
    libsqlite3-dev \
    libsystemd-dev \
    libusb-1.0-0-dev \
    libzmq3-dev \
    locales \
    ocl-icd-libopencl1 \
    ocl-icd-opencl-dev \
    opencl-headers \
    python-dev \
    qt5-default \
    qtmultimedia5-dev \
    sudo \
    valgrind \
    wget \
  && rm -rf /var/lib/apt/lists/*

RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

RUN curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
ENV PATH="/root/.pyenv/bin:/root/.pyenv/shims:${PATH}"

COPY Pipfile Pipfile.lock /tmp/
RUN pyenv install 3.8.2 && \
    pyenv global 3.8.2 && \
    pyenv rehash && \
    pip install --no-cache-dir --upgrade pip==20.1.1 && \
    pip install --no-cache-dir pipenv==2020.8.13 && \
    cd /tmp && \
    pipenv install --system --deploy --dev --clear && \
    pip uninstall torch tensorflow -y && \
    pip uninstall -y pipenv

# Sim

RUN apt-get update && apt-get install -y \
    apt-utils \
    unzip \
    tar \
    curl \
    xz-utils \
    beignet-opencl-icd \
    libglvnd-dev \
    alien \
    dbus \
    gcc-arm-none-eabi \
    tmux \
    vim \
  && rm -rf /var/lib/apt/lists/*

# Open[GL,CL] for gpu
ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},display
RUN apt-get update && apt-get install -y --no-install-recommends \
      mesa-utils \
      ocl-icd-libopencl1 \
    && rm -rf /var/lib/apt/lists/*
RUN mkdir -p /etc/OpenCL/vendors && \
    echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility,display

RUN dbus-uuidgen > /etc/machine-id

# CARLA python api
COPY ./tools/sim/install_carla.sh /tmp
RUN /tmp/install_carla.sh

# get same tmux config used on NEOS for debugging
RUN cd $HOME && \
    wget https://raw.githubusercontent.com/commaai/eon-neos-builder/master/devices/eon/home/.tmux.conf

RUN pip install onnxruntime_gpu==1.6.0

ENV PYTHONPATH $HOME/openpilot:${PYTHONPATH}
RUN mkdir -p $HOME/openpilot

COPY SConstruct $HOME/openpilot/

COPY ./phonelibs $HOME/openpilot/phonelibs
COPY ./site_scons $HOME/openpilot/site_scons
COPY ./rednose $HOME/openpilot/rednose
COPY ./common $HOME/openpilot/common
COPY ./models $HOME/openpilot/models
COPY ./opendbc $HOME/openpilot/opendbc
COPY ./cereal $HOME/openpilot/cereal
COPY ./panda $HOME/openpilot/panda
COPY ./selfdrive $HOME/openpilot/selfdrive
COPY ./tools $HOME/openpilot/tools

WORKDIR $HOME/openpilot
RUN scons -j$(nproc)
