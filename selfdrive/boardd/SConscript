import SCons
from SCons.Builder import Builder
from SCons.Action import Action

Import('env', 'common', 'cereal', 'messaging', 'cython_dependencies')

env.Program('boardd', ['boardd.cc', 'panda.cc', 'pigeon.cc'], LIBS=['usb-1.0', common, cereal, messaging, 'pthread', 'zmq', 'capnp', 'kj'])
env.Library('libcan_list_to_can_capnp', ['can_list_to_can_capnp.cc'])

# env.Command(['boardd_api_impl.so', 'boardd_api_impl.cpp'],
#             cython_dependencies + ['libcan_list_to_can_capnp.a', 'boardd_api_impl.pyx', 'boardd_setup.py'],
#             "cd selfdrive/boardd && python3 boardd_setup.py build_ext --inplace")

#gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/home/batman/.pyenv/versions/3.8.2/include/python3.8 -c boardd_api_impl.cpp -o build/temp.linux-x86_64-3.8/boardd_api_impl.o -std=c++1z -Wno-nullability-completeness
#g++ -pthread -shared -L/home/batman/.pyenv/versions/3.8.2/lib -Wl,-rpath=/home/batman/.pyenv/versions/3.8.2/lib -L/home/batman/.pyenv/versions/3.8.2/lib -Wl,-rpath=/home/batman/.pyenv/versions/3.8.2/lib build/temp.linux-x86_64-3.8/boardd_api_impl.o -L./ -L/home/batman/.pyenv/versions/3.8.2/lib -lcan_list_to_can_capnp -lcapnp -lkj -o /home/batman/openpilot/selfdrive/boardd/boardd_api_impl.so

cythonAction = Action("$CYTHONCOM")

def create_builder(env):
    try:
        cython = env['BUILDERS']['Cython']
    except KeyError:
        cython = SCons.Builder.Builder(
                  action = cythonAction,
                  emitter = {},
                  suffix = cython_suffix_emitter,
                  single_source = 1)
        env['BUILDERS']['Cython'] = cython

    return cython

def cython_suffix_emitter(env, source):
    return ".cc"

def generate(env):
    env["CYTHON"] = "cythonize"
    env["CYTHONCOM"] = "$CYTHON $CYTHONFLAGS $SOURCE"
    env["CYTHONCFILESUFFIX"] = ".cc"

    c_file, _ = SCons.Tool.createCFileBuilders(env)

    c_file.suffix['.pyx'] = cython_suffix_emitter
    c_file.add_action('.pyx', cythonAction)

    c_file.suffix['.py'] = cython_suffix_emitter
    c_file.add_action('.py', cythonAction)

    create_builder(env)
create_builder(env)
generate(env)

env.Cython('boardd_api_impl.pyx')
env.Command("build/temp.linux-x86_64-3.8/boardd_api_impl.o", "boardd_api_impl.cpp", "cd selfdrive/boardd && gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/home/batman/.pyenv/versions/3.8.2/include/python3.8 -c boardd_api_impl.cpp -o build/temp.linux-x86_64-3.8/boardd_api_impl.o -std=c++1z -Wno-nullability-completeness")
env.Command("boardd_api_impl.so", "build/temp.linux-x86_64-3.8/boardd_api_impl.o", "cd selfdrive/boardd && g++ -pthread -shared -L/home/batman/.pyenv/versions/3.8.2/lib -Wl,-rpath=/home/batman/.pyenv/versions/3.8.2/lib -L/home/batman/.pyenv/versions/3.8.2/lib -Wl,-rpath=/home/batman/.pyenv/versions/3.8.2/lib build/temp.linux-x86_64-3.8/boardd_api_impl.o -L./ -L/home/batman/.pyenv/versions/3.8.2/lib -lcan_list_to_can_capnp -lcapnp -lkj -o /home/batman/openpilot/selfdrive/boardd/boardd_api_impl.so")
