name: 'openpilot env setup'

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Setup Cache for Git LFS
      id: git-lfs-cache
      uses: actions/cache@v2
      with:
        path: .git/lfs
        key: lfs-${{ runner.os }}-${{ hashFiles('.gitattributes') }}

    - name: Pull LFS Objects
      run: git lfs pull

    - name: Setup Cache for Docker
      id: docker-cache
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: docker-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          docker-${{ runner.os }}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      run: |
        docker buildx create --use
        docker buildx build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache --tag my-image:latest .

    - name: Save Docker layer cache
      run: |
        docker save -o /tmp/docker-cache/my-image-latest.tar my-image:latest
      if: success()

    - name: Upload Docker layer cache
      uses: actions/upload-artifact@v2
      with:
        name: docker-layer-cache
        path: /tmp/docker-cache

    - name: Download Docker layer cache
      uses: actions/download-artifact@v2
      with:
        name: docker-layer-cache
        path: /tmp/docker-cache

    - name: Load Docker layer cache
      run: |
        docker load -i /tmp/docker-cache/my-image-latest.tar
      if: success()

    - name: Check Docker Hub Login
      if: contains(runner.name, 'buildjet')
      run: |
        if [[ -z "${{ secrets.DOCKER_HUB_PAT }}" ]]; then
          echo "Docker Hub PAT is not set. Exiting."
          exit 1
        fi

    - name: Login to Docker Hub
      if: contains(runner.name, 'buildjet')
      run: docker login -u your-username -p ${{ secrets.DOCKER_HUB_PAT }}

    - name: Build and Push Docker Image
      run: |
        docker buildx build --tag your-username/your-repo:latest .
        docker push your-username/your-repo:latest
