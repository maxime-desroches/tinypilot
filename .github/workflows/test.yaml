name: openpilot tests
on:
  push:
  pull_request:
  status:

env:
  RUN: docker run --shm-size 1G --rm tmppilot /bin/sh -c
  PERSIST: docker run --shm-size 1G --name tmppilot tmppilot /bin/sh -c
  CI_RUN: docker run -e GITHUB_ACTION -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_RUN_ID --rm tmppilotci /bin/bash -c
  UNIT_TEST: coverage run --append -m unittest discover
  BUILD: |
      # build the openpilot docker base image
      docker pull $(grep -ioP '(?<=^from)\s+\S+' Dockerfile.openpilot_base) || true
      docker pull docker.io/commaai/openpilot-base:latest || true
      docker build --cache-from docker.io/commaai/openpilot-base:latest -t commaai/openpilot-base:latest -f Dockerfile.openpilot_base .

      # build the final CI image
      docker pull docker.io/commaai/openpilotci:latest || true
      docker build --cache-from docker.io/commaai/openpilotci:latest -t tmppilot -f Dockerfile.openpilotci .

jobs:
  process_replay:
    name: process replay
    runs-on: ubuntu-16.04
    timeout-minutes: 50
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build Docker image
        run: eval "$BUILD"
      - name: Run replay
        env:
          FILEREADER_CACHE: "1"
        run: |
          $PERSIST "cd /tmp/openpilot && \
                    scons -j$(nproc) && \
                    CI=1 coverage run selfdrive/test/process_replay/test_processes.py"
      - name: Copy artifacts
        if: always()
        run: |
          mkdir folder
          docker cp tmppilot:tmp/comma_download_cache/ folder/
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: dump
          path: folder
