FROM ubuntu:20.04

ENV PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8 \
    NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=graphics,utility,compute \
    QTWEBENGINE_DISABLE_SANDBOX=1 \
    POETRY_VIRTUALENVS_CREATE=false \
    PYENV_VERSION=3.11.4 \
    PYENV_ROOT="/home/batman/pyenv" \
    PATH="/home/batman/pyenv/bin:/home/batman/pyenv/shims:$PATH"

RUN apt-get update && apt-get install -y --no-install-recommends \
    sudo tzdata locales ssh pulseaudio xvfb x11-xserver-utils gnome-screenshot apt-utils \
    alien unzip tar curl xz-utils dbus gcc-arm-none-eabi tmux vim lsb-core libx11-6 \
  && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
  && locale-gen \
  && dbus-uuidgen > /etc/machine-id \
  && rm -rf /var/lib/apt/lists/*

ARG INTEL_DRIVER=l_opencl_p_18.1.0.015.tgz
ARG INTEL_DRIVER_URL=https://registrationcenter-download.intel.com/akdlm/irc_nas/vcp/15532
RUN apt-get update && apt-get install -y ca-certificates && update-ca-certificates
RUN mkdir -p /tmp/opencl-driver-intel && cd /tmp/opencl-driver-intel \
    && curl -O $INTEL_DRIVER_URL/$INTEL_DRIVER \
    && tar -xzf $INTEL_DRIVER \
    && for i in $(basename $INTEL_DRIVER .tgz)/rpm/*.rpm; do alien --to-deb $i; done \
    && dpkg -i *.deb \
    && mkdir -p /etc/OpenCL/vendors/ \
    && echo /opt/intel/opencl_compilers_and_libraries_18.1.0.015/linux/compiler/lib/intel64_lin/libintelocl.so > /etc/OpenCL/vendors/intel.icd \
    && rm -rf /tmp/opencl-driver-intel

ARG USER=batman
ARG USER_UID=1000
RUN useradd -m -s /bin/bash -u $USER_UID $USER \
    && usermod -aG sudo $USER \
    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER $USER
COPY --chown=$USER pyproject.toml poetry.lock .python-version /tmp/
COPY --chown=$USER tools/install_ubuntu_dependencies.sh tools/install_python_dependencies.sh /tmp/tools/

RUN cd /tmp && ./tools/install_ubuntu_dependencies.sh && ./tools/install_python_dependencies.sh \
    && rm -rf /tmp/* \
    && rm -rf /home/$USER/.cache \
    && find /home/$USER/pyenv -type d -name ".git" | xargs rm -rf \
    && rm -rf /home/$USER/pyenv/versions/$PYENV_VERSION/lib/python$PYENV_VERSION/test

USER root
RUN git config --global --add safe.directory /tmp/openpilot
