[project]
name = "openpilot"
requires-python = ">= 3.11"
readme = "README.md"
license = {text = "MIT License"}
version = "0.1.0"
description = "an open source driver assistance system"
authors = ["Vehicle Researcher <user@comma.ai>"]
dependencies = [

# multiple users
"sounddevice >= 0",  # micd + soundd
"pyserial >= 0",     # pigeond + qcomgpsd
"requests >= 0",     # many one-off uses
"sympy >= 0",        # rednose + friends
"crcmod >= 0",       # cars + qcomgpsd
"tqdm >= 0",         # cars (fw_versions.py) on start + many one-off uses

# hardwared
"smbus2 >= 0",  # configuring amp

# core
"cffi >= 0",
"scons >= 0",
"pycapnp >= 0",
"Cython >= 0",
"setuptools >= 0",
"numpy >= 0",

# body / webrtcd
"aiohttp >= 0",
"aiortc >= 0",
"pyaudio >= 0",

# panda
#"libusb1 >= 0",
"libusb1 >= 0",
"spidev >=0; platform_system == 'Linux'",

# modeld
"onnx >= 1.14.0",
"onnxruntime >=1.16.3; platform_system == 'Linux' and platform_machine == 'aarch64'",
"onnxruntime-gpu >=1.16.3; platform_system == 'Linux' and platform_machine == 'x86_64'",

# logging
"pyzmq >= 0",
"sentry-sdk >= 0",

# athena
"PyJWT >= 0",
"json-rpc >= 0",
"websocket_client >= 0",

# acados deps
"casadi >= 0",
"future-fstrings >= 0",

# these should be removed
"psutil >= 0",
"pycryptodome >=  0",  # used in updated/casync, panda, body, and a test

#logreader
"zstd >= 0",
]

[project.optional-dependencies]
docs = [
  "Jinja2 >= 0",
  "sphinx >= 0",
  "sphinx-rtd-theme >= 0",
  "sphinx-sitemap >= 0"
]

testing = [
  "coverage >= 0",
  "hypothesis ==6.47.*",
  "mypy >= 0",
  "pre-commit >= 0",
  "pytest >= 0",
  "pytest-cov >= 0",
  "pytest-cpp >= 0",
  "pytest-subtests >= 0",
  "pytest-xdist >= 0",
  "pytest-timeout >= 0",
  "pytest-randomly >= 0",
  "pytest-asyncio >= 0",
  "pytest-mock >= 0",
  "pytest-repeat >= 0",
  "ruff >= 0"
]

dev = [
"av >= 0",
"azure-identity >= 0",
"azure-storage-blob >= 0",
"breathe >= 0",
"control >= 0",
"dictdiffer >= 0",
"flaky >= 0",
"inputs >= 0",
"lru-dict >= 0",
"matplotlib >= 0",
"metadrive-simulator; platform_machine != 'aarch64'",
"mpld3 >= 0",
"myst-parser >= 0",
"natsort >= 0",
"opencv-python-headless >= 0",
"parameterized >=0.8, <0.9",
#pprofile = "*"
"pyautogui >= 0",
"pygame >= 0",
"pyopencl >= 0; platform_machine != 'aarch64'",  # broken on arm64
"pywinctl >= 0",
"pyprof2calltree >= 0",
"rerun-sdk >= 0",
"tabulate >= 0",
"types-requests >= 0",
"types-tabulate >= 0",

# this is only pinned since 5.15.11 is broken
"pyqt5 ==5.15.2; platform_machine == 'x86_64'", # no aarch64 wheels for macOS/linux

]

[tool.uv.sources]
metadrive-simulator = { git = "https://github.com/commaai/metadrive.git", branch = "anisotropic_off" }

[project.urls]
Homepage = "https://comma.ai"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ignore=openpilot/ --ignore=cereal/ --ignore=opendbc/ --ignore=panda/ --ignore=rednose_repo/ --ignore=tinygrad_repo/ --ignore=teleoprtc_repo/ -Werror --strict-config --strict-markers --durations=10 -n auto --dist=loadgroup"
cpp_files = "test_*"
cpp_harness = "selfdrive/test/cpp_harness.py"
python_files = "test_*.py"
#timeout = "30"  # you get this long by default
markers = [
  "slow: tests that take awhile to run and can be skipped with -m 'not slow'",
  "tici: tests that are only meant to run on the C3/C3X",
]
testpaths = [
  "common",
  "selfdrive/pandad",
  "selfdrive/car",
  "selfdrive/controls",
  "selfdrive/locationd",
  "selfdrive/monitoring",
  "selfdrive/test/longitudinal_maneuvers",
  "selfdrive/test/process_replay/test_fuzzy.py",
  "system/updated",
  "system/athena",
  "system/camerad",
  "system/hardware",
  "system/loggerd",
  "system/proclogd",
  "system/tests",
  "system/ubloxd",
  "system/webrtc",
  "tools/lib/tests",
  "tools/replay",
  "tools/cabana",
  "cereal/messaging/tests",
]

[tool.mypy]
python_version = "3.11"
plugins = [
  "numpy.typing.mypy_plugin",
]
exclude = [
  "body/",
  "cereal/",
  "opendbc/",
  "panda/",
  "rednose/",
  "rednose_repo/",
  "tinygrad/",
  "tinygrad_repo/",
  "teleoprtc/",
  "teleoprtc_repo/",
  "third_party/",
]

# third-party packages
ignore_missing_imports=true

# helpful warnings
warn_redundant_casts=true
warn_unreachable=true
warn_unused_ignores=true

# restrict dynamic typing
warn_return_any=true

# allow implicit optionals for default args
implicit_optional = true

# https://beta.ruff.rs/docs/configuration/#using-pyprojecttoml
[tool.ruff]
indent-width = 2
lint.select = [
  "E", "F", "W", "PIE", "C4", "ISC", "A", "B",
  "NPY", # numpy
  "UP",  # pyupgrade
  "TRY302", "TRY400", "TRY401", # try/excepts
  "RUF008", "RUF100",
  "TID251"
]
lint.ignore = [
  "E741",
  "E402",
  "C408",
  "ISC003",
  "B027",
  "B024",
  "NPY002",  # new numpy random syntax is worse
  "UP038",   # (x, y) -> x|y for isinstance
]
line-length = 160
target-version="py311"
exclude = [
  "body",
  "cereal",
  "panda",
  "opendbc",
  "rednose_repo",
  "tinygrad_repo",
  "teleoprtc",
  "teleoprtc_repo",
  "third_party",
]
lint.flake8-implicit-str-concat.allow-multiline=false
[tool.ruff.lint.flake8-tidy-imports.banned-api]
"selfdrive".msg = "Use openpilot.selfdrive"
"common".msg = "Use openpilot.common"
"system".msg = "Use openpilot.system"
"third_party".msg = "Use openpilot.third_party"
"tools".msg = "Use openpilot.tools"
"pytest.main".msg = "pytest.main requires special handling that is easy to mess up!"
"unittest".msg = "Use pytest"

[tool.coverage.run]
concurrency = ["multiprocessing", "thread"]
[tool.ruff.format]
quote-style = "preserve"
