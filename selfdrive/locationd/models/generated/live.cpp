#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8573827050636567067) {
   out_8573827050636567067[0] = 0;
   out_8573827050636567067[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8573827050636567067[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8573827050636567067[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8573827050636567067[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8573827050636567067[5] = -sin(in_vec[1]);
   out_8573827050636567067[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8573827050636567067[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8573827050636567067[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8573827050636567067[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8573827050636567067[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8573827050636567067[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8573827050636567067[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8573827050636567067[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8573827050636567067[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8573827050636567067[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8573827050636567067[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8573827050636567067[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2292859409783966048) {
   out_2292859409783966048[0] = delta_x[0] + nom_x[0];
   out_2292859409783966048[1] = delta_x[1] + nom_x[1];
   out_2292859409783966048[2] = delta_x[2] + nom_x[2];
   out_2292859409783966048[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2292859409783966048[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2292859409783966048[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2292859409783966048[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2292859409783966048[7] = delta_x[6] + nom_x[7];
   out_2292859409783966048[8] = delta_x[7] + nom_x[8];
   out_2292859409783966048[9] = delta_x[8] + nom_x[9];
   out_2292859409783966048[10] = delta_x[9] + nom_x[10];
   out_2292859409783966048[11] = delta_x[10] + nom_x[11];
   out_2292859409783966048[12] = delta_x[11] + nom_x[12];
   out_2292859409783966048[13] = delta_x[12] + nom_x[13];
   out_2292859409783966048[14] = delta_x[13] + nom_x[14];
   out_2292859409783966048[15] = delta_x[14] + nom_x[15];
   out_2292859409783966048[16] = delta_x[15] + nom_x[16];
   out_2292859409783966048[17] = delta_x[16] + nom_x[17];
   out_2292859409783966048[18] = delta_x[17] + nom_x[18];
   out_2292859409783966048[19] = delta_x[18] + nom_x[19];
   out_2292859409783966048[20] = delta_x[19] + nom_x[20];
   out_2292859409783966048[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7466509707901054724) {
   out_7466509707901054724[0] = -nom_x[0] + true_x[0];
   out_7466509707901054724[1] = -nom_x[1] + true_x[1];
   out_7466509707901054724[2] = -nom_x[2] + true_x[2];
   out_7466509707901054724[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7466509707901054724[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7466509707901054724[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7466509707901054724[6] = -nom_x[7] + true_x[7];
   out_7466509707901054724[7] = -nom_x[8] + true_x[8];
   out_7466509707901054724[8] = -nom_x[9] + true_x[9];
   out_7466509707901054724[9] = -nom_x[10] + true_x[10];
   out_7466509707901054724[10] = -nom_x[11] + true_x[11];
   out_7466509707901054724[11] = -nom_x[12] + true_x[12];
   out_7466509707901054724[12] = -nom_x[13] + true_x[13];
   out_7466509707901054724[13] = -nom_x[14] + true_x[14];
   out_7466509707901054724[14] = -nom_x[15] + true_x[15];
   out_7466509707901054724[15] = -nom_x[16] + true_x[16];
   out_7466509707901054724[16] = -nom_x[17] + true_x[17];
   out_7466509707901054724[17] = -nom_x[18] + true_x[18];
   out_7466509707901054724[18] = -nom_x[19] + true_x[19];
   out_7466509707901054724[19] = -nom_x[20] + true_x[20];
   out_7466509707901054724[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4810487012885038206) {
   out_4810487012885038206[0] = 1.0;
   out_4810487012885038206[1] = 0;
   out_4810487012885038206[2] = 0;
   out_4810487012885038206[3] = 0;
   out_4810487012885038206[4] = 0;
   out_4810487012885038206[5] = 0;
   out_4810487012885038206[6] = 0;
   out_4810487012885038206[7] = 0;
   out_4810487012885038206[8] = 0;
   out_4810487012885038206[9] = 0;
   out_4810487012885038206[10] = 0;
   out_4810487012885038206[11] = 0;
   out_4810487012885038206[12] = 0;
   out_4810487012885038206[13] = 0;
   out_4810487012885038206[14] = 0;
   out_4810487012885038206[15] = 0;
   out_4810487012885038206[16] = 0;
   out_4810487012885038206[17] = 0;
   out_4810487012885038206[18] = 0;
   out_4810487012885038206[19] = 0;
   out_4810487012885038206[20] = 0;
   out_4810487012885038206[21] = 0;
   out_4810487012885038206[22] = 1.0;
   out_4810487012885038206[23] = 0;
   out_4810487012885038206[24] = 0;
   out_4810487012885038206[25] = 0;
   out_4810487012885038206[26] = 0;
   out_4810487012885038206[27] = 0;
   out_4810487012885038206[28] = 0;
   out_4810487012885038206[29] = 0;
   out_4810487012885038206[30] = 0;
   out_4810487012885038206[31] = 0;
   out_4810487012885038206[32] = 0;
   out_4810487012885038206[33] = 0;
   out_4810487012885038206[34] = 0;
   out_4810487012885038206[35] = 0;
   out_4810487012885038206[36] = 0;
   out_4810487012885038206[37] = 0;
   out_4810487012885038206[38] = 0;
   out_4810487012885038206[39] = 0;
   out_4810487012885038206[40] = 0;
   out_4810487012885038206[41] = 0;
   out_4810487012885038206[42] = 0;
   out_4810487012885038206[43] = 0;
   out_4810487012885038206[44] = 1.0;
   out_4810487012885038206[45] = 0;
   out_4810487012885038206[46] = 0;
   out_4810487012885038206[47] = 0;
   out_4810487012885038206[48] = 0;
   out_4810487012885038206[49] = 0;
   out_4810487012885038206[50] = 0;
   out_4810487012885038206[51] = 0;
   out_4810487012885038206[52] = 0;
   out_4810487012885038206[53] = 0;
   out_4810487012885038206[54] = 0;
   out_4810487012885038206[55] = 0;
   out_4810487012885038206[56] = 0;
   out_4810487012885038206[57] = 0;
   out_4810487012885038206[58] = 0;
   out_4810487012885038206[59] = 0;
   out_4810487012885038206[60] = 0;
   out_4810487012885038206[61] = 0;
   out_4810487012885038206[62] = 0;
   out_4810487012885038206[63] = 0;
   out_4810487012885038206[64] = 0;
   out_4810487012885038206[65] = 0;
   out_4810487012885038206[66] = -0.5*state[4];
   out_4810487012885038206[67] = -0.5*state[5];
   out_4810487012885038206[68] = -0.5*state[6];
   out_4810487012885038206[69] = 0;
   out_4810487012885038206[70] = 0;
   out_4810487012885038206[71] = 0;
   out_4810487012885038206[72] = 0;
   out_4810487012885038206[73] = 0;
   out_4810487012885038206[74] = 0;
   out_4810487012885038206[75] = 0;
   out_4810487012885038206[76] = 0;
   out_4810487012885038206[77] = 0;
   out_4810487012885038206[78] = 0;
   out_4810487012885038206[79] = 0;
   out_4810487012885038206[80] = 0;
   out_4810487012885038206[81] = 0;
   out_4810487012885038206[82] = 0;
   out_4810487012885038206[83] = 0;
   out_4810487012885038206[84] = 0;
   out_4810487012885038206[85] = 0;
   out_4810487012885038206[86] = 0;
   out_4810487012885038206[87] = 0.5*state[3];
   out_4810487012885038206[88] = 0.5*state[6];
   out_4810487012885038206[89] = -0.5*state[5];
   out_4810487012885038206[90] = 0;
   out_4810487012885038206[91] = 0;
   out_4810487012885038206[92] = 0;
   out_4810487012885038206[93] = 0;
   out_4810487012885038206[94] = 0;
   out_4810487012885038206[95] = 0;
   out_4810487012885038206[96] = 0;
   out_4810487012885038206[97] = 0;
   out_4810487012885038206[98] = 0;
   out_4810487012885038206[99] = 0;
   out_4810487012885038206[100] = 0;
   out_4810487012885038206[101] = 0;
   out_4810487012885038206[102] = 0;
   out_4810487012885038206[103] = 0;
   out_4810487012885038206[104] = 0;
   out_4810487012885038206[105] = 0;
   out_4810487012885038206[106] = 0;
   out_4810487012885038206[107] = 0;
   out_4810487012885038206[108] = -0.5*state[6];
   out_4810487012885038206[109] = 0.5*state[3];
   out_4810487012885038206[110] = 0.5*state[4];
   out_4810487012885038206[111] = 0;
   out_4810487012885038206[112] = 0;
   out_4810487012885038206[113] = 0;
   out_4810487012885038206[114] = 0;
   out_4810487012885038206[115] = 0;
   out_4810487012885038206[116] = 0;
   out_4810487012885038206[117] = 0;
   out_4810487012885038206[118] = 0;
   out_4810487012885038206[119] = 0;
   out_4810487012885038206[120] = 0;
   out_4810487012885038206[121] = 0;
   out_4810487012885038206[122] = 0;
   out_4810487012885038206[123] = 0;
   out_4810487012885038206[124] = 0;
   out_4810487012885038206[125] = 0;
   out_4810487012885038206[126] = 0;
   out_4810487012885038206[127] = 0;
   out_4810487012885038206[128] = 0;
   out_4810487012885038206[129] = 0.5*state[5];
   out_4810487012885038206[130] = -0.5*state[4];
   out_4810487012885038206[131] = 0.5*state[3];
   out_4810487012885038206[132] = 0;
   out_4810487012885038206[133] = 0;
   out_4810487012885038206[134] = 0;
   out_4810487012885038206[135] = 0;
   out_4810487012885038206[136] = 0;
   out_4810487012885038206[137] = 0;
   out_4810487012885038206[138] = 0;
   out_4810487012885038206[139] = 0;
   out_4810487012885038206[140] = 0;
   out_4810487012885038206[141] = 0;
   out_4810487012885038206[142] = 0;
   out_4810487012885038206[143] = 0;
   out_4810487012885038206[144] = 0;
   out_4810487012885038206[145] = 0;
   out_4810487012885038206[146] = 0;
   out_4810487012885038206[147] = 0;
   out_4810487012885038206[148] = 0;
   out_4810487012885038206[149] = 0;
   out_4810487012885038206[150] = 0;
   out_4810487012885038206[151] = 0;
   out_4810487012885038206[152] = 0;
   out_4810487012885038206[153] = 1.0;
   out_4810487012885038206[154] = 0;
   out_4810487012885038206[155] = 0;
   out_4810487012885038206[156] = 0;
   out_4810487012885038206[157] = 0;
   out_4810487012885038206[158] = 0;
   out_4810487012885038206[159] = 0;
   out_4810487012885038206[160] = 0;
   out_4810487012885038206[161] = 0;
   out_4810487012885038206[162] = 0;
   out_4810487012885038206[163] = 0;
   out_4810487012885038206[164] = 0;
   out_4810487012885038206[165] = 0;
   out_4810487012885038206[166] = 0;
   out_4810487012885038206[167] = 0;
   out_4810487012885038206[168] = 0;
   out_4810487012885038206[169] = 0;
   out_4810487012885038206[170] = 0;
   out_4810487012885038206[171] = 0;
   out_4810487012885038206[172] = 0;
   out_4810487012885038206[173] = 0;
   out_4810487012885038206[174] = 0;
   out_4810487012885038206[175] = 1.0;
   out_4810487012885038206[176] = 0;
   out_4810487012885038206[177] = 0;
   out_4810487012885038206[178] = 0;
   out_4810487012885038206[179] = 0;
   out_4810487012885038206[180] = 0;
   out_4810487012885038206[181] = 0;
   out_4810487012885038206[182] = 0;
   out_4810487012885038206[183] = 0;
   out_4810487012885038206[184] = 0;
   out_4810487012885038206[185] = 0;
   out_4810487012885038206[186] = 0;
   out_4810487012885038206[187] = 0;
   out_4810487012885038206[188] = 0;
   out_4810487012885038206[189] = 0;
   out_4810487012885038206[190] = 0;
   out_4810487012885038206[191] = 0;
   out_4810487012885038206[192] = 0;
   out_4810487012885038206[193] = 0;
   out_4810487012885038206[194] = 0;
   out_4810487012885038206[195] = 0;
   out_4810487012885038206[196] = 0;
   out_4810487012885038206[197] = 1.0;
   out_4810487012885038206[198] = 0;
   out_4810487012885038206[199] = 0;
   out_4810487012885038206[200] = 0;
   out_4810487012885038206[201] = 0;
   out_4810487012885038206[202] = 0;
   out_4810487012885038206[203] = 0;
   out_4810487012885038206[204] = 0;
   out_4810487012885038206[205] = 0;
   out_4810487012885038206[206] = 0;
   out_4810487012885038206[207] = 0;
   out_4810487012885038206[208] = 0;
   out_4810487012885038206[209] = 0;
   out_4810487012885038206[210] = 0;
   out_4810487012885038206[211] = 0;
   out_4810487012885038206[212] = 0;
   out_4810487012885038206[213] = 0;
   out_4810487012885038206[214] = 0;
   out_4810487012885038206[215] = 0;
   out_4810487012885038206[216] = 0;
   out_4810487012885038206[217] = 0;
   out_4810487012885038206[218] = 0;
   out_4810487012885038206[219] = 1.0;
   out_4810487012885038206[220] = 0;
   out_4810487012885038206[221] = 0;
   out_4810487012885038206[222] = 0;
   out_4810487012885038206[223] = 0;
   out_4810487012885038206[224] = 0;
   out_4810487012885038206[225] = 0;
   out_4810487012885038206[226] = 0;
   out_4810487012885038206[227] = 0;
   out_4810487012885038206[228] = 0;
   out_4810487012885038206[229] = 0;
   out_4810487012885038206[230] = 0;
   out_4810487012885038206[231] = 0;
   out_4810487012885038206[232] = 0;
   out_4810487012885038206[233] = 0;
   out_4810487012885038206[234] = 0;
   out_4810487012885038206[235] = 0;
   out_4810487012885038206[236] = 0;
   out_4810487012885038206[237] = 0;
   out_4810487012885038206[238] = 0;
   out_4810487012885038206[239] = 0;
   out_4810487012885038206[240] = 0;
   out_4810487012885038206[241] = 1.0;
   out_4810487012885038206[242] = 0;
   out_4810487012885038206[243] = 0;
   out_4810487012885038206[244] = 0;
   out_4810487012885038206[245] = 0;
   out_4810487012885038206[246] = 0;
   out_4810487012885038206[247] = 0;
   out_4810487012885038206[248] = 0;
   out_4810487012885038206[249] = 0;
   out_4810487012885038206[250] = 0;
   out_4810487012885038206[251] = 0;
   out_4810487012885038206[252] = 0;
   out_4810487012885038206[253] = 0;
   out_4810487012885038206[254] = 0;
   out_4810487012885038206[255] = 0;
   out_4810487012885038206[256] = 0;
   out_4810487012885038206[257] = 0;
   out_4810487012885038206[258] = 0;
   out_4810487012885038206[259] = 0;
   out_4810487012885038206[260] = 0;
   out_4810487012885038206[261] = 0;
   out_4810487012885038206[262] = 0;
   out_4810487012885038206[263] = 1.0;
   out_4810487012885038206[264] = 0;
   out_4810487012885038206[265] = 0;
   out_4810487012885038206[266] = 0;
   out_4810487012885038206[267] = 0;
   out_4810487012885038206[268] = 0;
   out_4810487012885038206[269] = 0;
   out_4810487012885038206[270] = 0;
   out_4810487012885038206[271] = 0;
   out_4810487012885038206[272] = 0;
   out_4810487012885038206[273] = 0;
   out_4810487012885038206[274] = 0;
   out_4810487012885038206[275] = 0;
   out_4810487012885038206[276] = 0;
   out_4810487012885038206[277] = 0;
   out_4810487012885038206[278] = 0;
   out_4810487012885038206[279] = 0;
   out_4810487012885038206[280] = 0;
   out_4810487012885038206[281] = 0;
   out_4810487012885038206[282] = 0;
   out_4810487012885038206[283] = 0;
   out_4810487012885038206[284] = 0;
   out_4810487012885038206[285] = 1.0;
   out_4810487012885038206[286] = 0;
   out_4810487012885038206[287] = 0;
   out_4810487012885038206[288] = 0;
   out_4810487012885038206[289] = 0;
   out_4810487012885038206[290] = 0;
   out_4810487012885038206[291] = 0;
   out_4810487012885038206[292] = 0;
   out_4810487012885038206[293] = 0;
   out_4810487012885038206[294] = 0;
   out_4810487012885038206[295] = 0;
   out_4810487012885038206[296] = 0;
   out_4810487012885038206[297] = 0;
   out_4810487012885038206[298] = 0;
   out_4810487012885038206[299] = 0;
   out_4810487012885038206[300] = 0;
   out_4810487012885038206[301] = 0;
   out_4810487012885038206[302] = 0;
   out_4810487012885038206[303] = 0;
   out_4810487012885038206[304] = 0;
   out_4810487012885038206[305] = 0;
   out_4810487012885038206[306] = 0;
   out_4810487012885038206[307] = 1.0;
   out_4810487012885038206[308] = 0;
   out_4810487012885038206[309] = 0;
   out_4810487012885038206[310] = 0;
   out_4810487012885038206[311] = 0;
   out_4810487012885038206[312] = 0;
   out_4810487012885038206[313] = 0;
   out_4810487012885038206[314] = 0;
   out_4810487012885038206[315] = 0;
   out_4810487012885038206[316] = 0;
   out_4810487012885038206[317] = 0;
   out_4810487012885038206[318] = 0;
   out_4810487012885038206[319] = 0;
   out_4810487012885038206[320] = 0;
   out_4810487012885038206[321] = 0;
   out_4810487012885038206[322] = 0;
   out_4810487012885038206[323] = 0;
   out_4810487012885038206[324] = 0;
   out_4810487012885038206[325] = 0;
   out_4810487012885038206[326] = 0;
   out_4810487012885038206[327] = 0;
   out_4810487012885038206[328] = 0;
   out_4810487012885038206[329] = 1.0;
   out_4810487012885038206[330] = 0;
   out_4810487012885038206[331] = 0;
   out_4810487012885038206[332] = 0;
   out_4810487012885038206[333] = 0;
   out_4810487012885038206[334] = 0;
   out_4810487012885038206[335] = 0;
   out_4810487012885038206[336] = 0;
   out_4810487012885038206[337] = 0;
   out_4810487012885038206[338] = 0;
   out_4810487012885038206[339] = 0;
   out_4810487012885038206[340] = 0;
   out_4810487012885038206[341] = 0;
   out_4810487012885038206[342] = 0;
   out_4810487012885038206[343] = 0;
   out_4810487012885038206[344] = 0;
   out_4810487012885038206[345] = 0;
   out_4810487012885038206[346] = 0;
   out_4810487012885038206[347] = 0;
   out_4810487012885038206[348] = 0;
   out_4810487012885038206[349] = 0;
   out_4810487012885038206[350] = 0;
   out_4810487012885038206[351] = 1.0;
   out_4810487012885038206[352] = 0;
   out_4810487012885038206[353] = 0;
   out_4810487012885038206[354] = 0;
   out_4810487012885038206[355] = 0;
   out_4810487012885038206[356] = 0;
   out_4810487012885038206[357] = 0;
   out_4810487012885038206[358] = 0;
   out_4810487012885038206[359] = 0;
   out_4810487012885038206[360] = 0;
   out_4810487012885038206[361] = 0;
   out_4810487012885038206[362] = 0;
   out_4810487012885038206[363] = 0;
   out_4810487012885038206[364] = 0;
   out_4810487012885038206[365] = 0;
   out_4810487012885038206[366] = 0;
   out_4810487012885038206[367] = 0;
   out_4810487012885038206[368] = 0;
   out_4810487012885038206[369] = 0;
   out_4810487012885038206[370] = 0;
   out_4810487012885038206[371] = 0;
   out_4810487012885038206[372] = 0;
   out_4810487012885038206[373] = 1.0;
   out_4810487012885038206[374] = 0;
   out_4810487012885038206[375] = 0;
   out_4810487012885038206[376] = 0;
   out_4810487012885038206[377] = 0;
   out_4810487012885038206[378] = 0;
   out_4810487012885038206[379] = 0;
   out_4810487012885038206[380] = 0;
   out_4810487012885038206[381] = 0;
   out_4810487012885038206[382] = 0;
   out_4810487012885038206[383] = 0;
   out_4810487012885038206[384] = 0;
   out_4810487012885038206[385] = 0;
   out_4810487012885038206[386] = 0;
   out_4810487012885038206[387] = 0;
   out_4810487012885038206[388] = 0;
   out_4810487012885038206[389] = 0;
   out_4810487012885038206[390] = 0;
   out_4810487012885038206[391] = 0;
   out_4810487012885038206[392] = 0;
   out_4810487012885038206[393] = 0;
   out_4810487012885038206[394] = 0;
   out_4810487012885038206[395] = 1.0;
   out_4810487012885038206[396] = 0;
   out_4810487012885038206[397] = 0;
   out_4810487012885038206[398] = 0;
   out_4810487012885038206[399] = 0;
   out_4810487012885038206[400] = 0;
   out_4810487012885038206[401] = 0;
   out_4810487012885038206[402] = 0;
   out_4810487012885038206[403] = 0;
   out_4810487012885038206[404] = 0;
   out_4810487012885038206[405] = 0;
   out_4810487012885038206[406] = 0;
   out_4810487012885038206[407] = 0;
   out_4810487012885038206[408] = 0;
   out_4810487012885038206[409] = 0;
   out_4810487012885038206[410] = 0;
   out_4810487012885038206[411] = 0;
   out_4810487012885038206[412] = 0;
   out_4810487012885038206[413] = 0;
   out_4810487012885038206[414] = 0;
   out_4810487012885038206[415] = 0;
   out_4810487012885038206[416] = 0;
   out_4810487012885038206[417] = 1.0;
   out_4810487012885038206[418] = 0;
   out_4810487012885038206[419] = 0;
   out_4810487012885038206[420] = 0;
   out_4810487012885038206[421] = 0;
   out_4810487012885038206[422] = 0;
   out_4810487012885038206[423] = 0;
   out_4810487012885038206[424] = 0;
   out_4810487012885038206[425] = 0;
   out_4810487012885038206[426] = 0;
   out_4810487012885038206[427] = 0;
   out_4810487012885038206[428] = 0;
   out_4810487012885038206[429] = 0;
   out_4810487012885038206[430] = 0;
   out_4810487012885038206[431] = 0;
   out_4810487012885038206[432] = 0;
   out_4810487012885038206[433] = 0;
   out_4810487012885038206[434] = 0;
   out_4810487012885038206[435] = 0;
   out_4810487012885038206[436] = 0;
   out_4810487012885038206[437] = 0;
   out_4810487012885038206[438] = 0;
   out_4810487012885038206[439] = 1.0;
   out_4810487012885038206[440] = 0;
   out_4810487012885038206[441] = 0;
   out_4810487012885038206[442] = 0;
   out_4810487012885038206[443] = 0;
   out_4810487012885038206[444] = 0;
   out_4810487012885038206[445] = 0;
   out_4810487012885038206[446] = 0;
   out_4810487012885038206[447] = 0;
   out_4810487012885038206[448] = 0;
   out_4810487012885038206[449] = 0;
   out_4810487012885038206[450] = 0;
   out_4810487012885038206[451] = 0;
   out_4810487012885038206[452] = 0;
   out_4810487012885038206[453] = 0;
   out_4810487012885038206[454] = 0;
   out_4810487012885038206[455] = 0;
   out_4810487012885038206[456] = 0;
   out_4810487012885038206[457] = 0;
   out_4810487012885038206[458] = 0;
   out_4810487012885038206[459] = 0;
   out_4810487012885038206[460] = 0;
   out_4810487012885038206[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7925576684396976167) {
   out_7925576684396976167[0] = dt*state[7] + state[0];
   out_7925576684396976167[1] = dt*state[8] + state[1];
   out_7925576684396976167[2] = dt*state[9] + state[2];
   out_7925576684396976167[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7925576684396976167[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7925576684396976167[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7925576684396976167[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7925576684396976167[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7925576684396976167[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7925576684396976167[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7925576684396976167[10] = state[10];
   out_7925576684396976167[11] = state[11];
   out_7925576684396976167[12] = state[12];
   out_7925576684396976167[13] = state[13];
   out_7925576684396976167[14] = state[14];
   out_7925576684396976167[15] = state[15];
   out_7925576684396976167[16] = state[16];
   out_7925576684396976167[17] = state[17];
   out_7925576684396976167[18] = state[18];
   out_7925576684396976167[19] = state[19];
   out_7925576684396976167[20] = state[20];
   out_7925576684396976167[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6553453215573577202) {
   out_6553453215573577202[0] = 1;
   out_6553453215573577202[1] = 0;
   out_6553453215573577202[2] = 0;
   out_6553453215573577202[3] = 0;
   out_6553453215573577202[4] = 0;
   out_6553453215573577202[5] = 0;
   out_6553453215573577202[6] = dt;
   out_6553453215573577202[7] = 0;
   out_6553453215573577202[8] = 0;
   out_6553453215573577202[9] = 0;
   out_6553453215573577202[10] = 0;
   out_6553453215573577202[11] = 0;
   out_6553453215573577202[12] = 0;
   out_6553453215573577202[13] = 0;
   out_6553453215573577202[14] = 0;
   out_6553453215573577202[15] = 0;
   out_6553453215573577202[16] = 0;
   out_6553453215573577202[17] = 0;
   out_6553453215573577202[18] = 0;
   out_6553453215573577202[19] = 0;
   out_6553453215573577202[20] = 0;
   out_6553453215573577202[21] = 0;
   out_6553453215573577202[22] = 1;
   out_6553453215573577202[23] = 0;
   out_6553453215573577202[24] = 0;
   out_6553453215573577202[25] = 0;
   out_6553453215573577202[26] = 0;
   out_6553453215573577202[27] = 0;
   out_6553453215573577202[28] = dt;
   out_6553453215573577202[29] = 0;
   out_6553453215573577202[30] = 0;
   out_6553453215573577202[31] = 0;
   out_6553453215573577202[32] = 0;
   out_6553453215573577202[33] = 0;
   out_6553453215573577202[34] = 0;
   out_6553453215573577202[35] = 0;
   out_6553453215573577202[36] = 0;
   out_6553453215573577202[37] = 0;
   out_6553453215573577202[38] = 0;
   out_6553453215573577202[39] = 0;
   out_6553453215573577202[40] = 0;
   out_6553453215573577202[41] = 0;
   out_6553453215573577202[42] = 0;
   out_6553453215573577202[43] = 0;
   out_6553453215573577202[44] = 1;
   out_6553453215573577202[45] = 0;
   out_6553453215573577202[46] = 0;
   out_6553453215573577202[47] = 0;
   out_6553453215573577202[48] = 0;
   out_6553453215573577202[49] = 0;
   out_6553453215573577202[50] = dt;
   out_6553453215573577202[51] = 0;
   out_6553453215573577202[52] = 0;
   out_6553453215573577202[53] = 0;
   out_6553453215573577202[54] = 0;
   out_6553453215573577202[55] = 0;
   out_6553453215573577202[56] = 0;
   out_6553453215573577202[57] = 0;
   out_6553453215573577202[58] = 0;
   out_6553453215573577202[59] = 0;
   out_6553453215573577202[60] = 0;
   out_6553453215573577202[61] = 0;
   out_6553453215573577202[62] = 0;
   out_6553453215573577202[63] = 0;
   out_6553453215573577202[64] = 0;
   out_6553453215573577202[65] = 0;
   out_6553453215573577202[66] = 1;
   out_6553453215573577202[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6553453215573577202[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6553453215573577202[69] = 0;
   out_6553453215573577202[70] = 0;
   out_6553453215573577202[71] = 0;
   out_6553453215573577202[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6553453215573577202[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6553453215573577202[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6553453215573577202[75] = 0;
   out_6553453215573577202[76] = 0;
   out_6553453215573577202[77] = 0;
   out_6553453215573577202[78] = 0;
   out_6553453215573577202[79] = 0;
   out_6553453215573577202[80] = 0;
   out_6553453215573577202[81] = 0;
   out_6553453215573577202[82] = 0;
   out_6553453215573577202[83] = 0;
   out_6553453215573577202[84] = 0;
   out_6553453215573577202[85] = 0;
   out_6553453215573577202[86] = 0;
   out_6553453215573577202[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6553453215573577202[88] = 1;
   out_6553453215573577202[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6553453215573577202[90] = 0;
   out_6553453215573577202[91] = 0;
   out_6553453215573577202[92] = 0;
   out_6553453215573577202[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6553453215573577202[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6553453215573577202[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6553453215573577202[96] = 0;
   out_6553453215573577202[97] = 0;
   out_6553453215573577202[98] = 0;
   out_6553453215573577202[99] = 0;
   out_6553453215573577202[100] = 0;
   out_6553453215573577202[101] = 0;
   out_6553453215573577202[102] = 0;
   out_6553453215573577202[103] = 0;
   out_6553453215573577202[104] = 0;
   out_6553453215573577202[105] = 0;
   out_6553453215573577202[106] = 0;
   out_6553453215573577202[107] = 0;
   out_6553453215573577202[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6553453215573577202[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6553453215573577202[110] = 1;
   out_6553453215573577202[111] = 0;
   out_6553453215573577202[112] = 0;
   out_6553453215573577202[113] = 0;
   out_6553453215573577202[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6553453215573577202[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6553453215573577202[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6553453215573577202[117] = 0;
   out_6553453215573577202[118] = 0;
   out_6553453215573577202[119] = 0;
   out_6553453215573577202[120] = 0;
   out_6553453215573577202[121] = 0;
   out_6553453215573577202[122] = 0;
   out_6553453215573577202[123] = 0;
   out_6553453215573577202[124] = 0;
   out_6553453215573577202[125] = 0;
   out_6553453215573577202[126] = 0;
   out_6553453215573577202[127] = 0;
   out_6553453215573577202[128] = 0;
   out_6553453215573577202[129] = 0;
   out_6553453215573577202[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6553453215573577202[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6553453215573577202[132] = 1;
   out_6553453215573577202[133] = 0;
   out_6553453215573577202[134] = 0;
   out_6553453215573577202[135] = 0;
   out_6553453215573577202[136] = 0;
   out_6553453215573577202[137] = 0;
   out_6553453215573577202[138] = 0;
   out_6553453215573577202[139] = 0;
   out_6553453215573577202[140] = 0;
   out_6553453215573577202[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6553453215573577202[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6553453215573577202[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6553453215573577202[144] = 0;
   out_6553453215573577202[145] = 0;
   out_6553453215573577202[146] = 0;
   out_6553453215573577202[147] = 0;
   out_6553453215573577202[148] = 0;
   out_6553453215573577202[149] = 0;
   out_6553453215573577202[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6553453215573577202[151] = 0;
   out_6553453215573577202[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6553453215573577202[153] = 0;
   out_6553453215573577202[154] = 1;
   out_6553453215573577202[155] = 0;
   out_6553453215573577202[156] = 0;
   out_6553453215573577202[157] = 0;
   out_6553453215573577202[158] = 0;
   out_6553453215573577202[159] = 0;
   out_6553453215573577202[160] = 0;
   out_6553453215573577202[161] = 0;
   out_6553453215573577202[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6553453215573577202[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6553453215573577202[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6553453215573577202[165] = 0;
   out_6553453215573577202[166] = 0;
   out_6553453215573577202[167] = 0;
   out_6553453215573577202[168] = 0;
   out_6553453215573577202[169] = 0;
   out_6553453215573577202[170] = 0;
   out_6553453215573577202[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6553453215573577202[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6553453215573577202[173] = 0;
   out_6553453215573577202[174] = 0;
   out_6553453215573577202[175] = 0;
   out_6553453215573577202[176] = 1;
   out_6553453215573577202[177] = 0;
   out_6553453215573577202[178] = 0;
   out_6553453215573577202[179] = 0;
   out_6553453215573577202[180] = 0;
   out_6553453215573577202[181] = 0;
   out_6553453215573577202[182] = 0;
   out_6553453215573577202[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6553453215573577202[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6553453215573577202[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6553453215573577202[186] = 0;
   out_6553453215573577202[187] = 0;
   out_6553453215573577202[188] = 0;
   out_6553453215573577202[189] = 0;
   out_6553453215573577202[190] = 0;
   out_6553453215573577202[191] = 0;
   out_6553453215573577202[192] = 0;
   out_6553453215573577202[193] = 0;
   out_6553453215573577202[194] = 0;
   out_6553453215573577202[195] = 0;
   out_6553453215573577202[196] = 0;
   out_6553453215573577202[197] = 0;
   out_6553453215573577202[198] = 1;
   out_6553453215573577202[199] = 0;
   out_6553453215573577202[200] = 0;
   out_6553453215573577202[201] = 0;
   out_6553453215573577202[202] = 0;
   out_6553453215573577202[203] = 0;
   out_6553453215573577202[204] = 0;
   out_6553453215573577202[205] = 0;
   out_6553453215573577202[206] = 0;
   out_6553453215573577202[207] = 0;
   out_6553453215573577202[208] = 0;
   out_6553453215573577202[209] = 0;
   out_6553453215573577202[210] = 0;
   out_6553453215573577202[211] = 0;
   out_6553453215573577202[212] = 0;
   out_6553453215573577202[213] = 0;
   out_6553453215573577202[214] = 0;
   out_6553453215573577202[215] = 0;
   out_6553453215573577202[216] = 0;
   out_6553453215573577202[217] = 0;
   out_6553453215573577202[218] = 0;
   out_6553453215573577202[219] = 0;
   out_6553453215573577202[220] = 1;
   out_6553453215573577202[221] = 0;
   out_6553453215573577202[222] = 0;
   out_6553453215573577202[223] = 0;
   out_6553453215573577202[224] = 0;
   out_6553453215573577202[225] = 0;
   out_6553453215573577202[226] = 0;
   out_6553453215573577202[227] = 0;
   out_6553453215573577202[228] = 0;
   out_6553453215573577202[229] = 0;
   out_6553453215573577202[230] = 0;
   out_6553453215573577202[231] = 0;
   out_6553453215573577202[232] = 0;
   out_6553453215573577202[233] = 0;
   out_6553453215573577202[234] = 0;
   out_6553453215573577202[235] = 0;
   out_6553453215573577202[236] = 0;
   out_6553453215573577202[237] = 0;
   out_6553453215573577202[238] = 0;
   out_6553453215573577202[239] = 0;
   out_6553453215573577202[240] = 0;
   out_6553453215573577202[241] = 0;
   out_6553453215573577202[242] = 1;
   out_6553453215573577202[243] = 0;
   out_6553453215573577202[244] = 0;
   out_6553453215573577202[245] = 0;
   out_6553453215573577202[246] = 0;
   out_6553453215573577202[247] = 0;
   out_6553453215573577202[248] = 0;
   out_6553453215573577202[249] = 0;
   out_6553453215573577202[250] = 0;
   out_6553453215573577202[251] = 0;
   out_6553453215573577202[252] = 0;
   out_6553453215573577202[253] = 0;
   out_6553453215573577202[254] = 0;
   out_6553453215573577202[255] = 0;
   out_6553453215573577202[256] = 0;
   out_6553453215573577202[257] = 0;
   out_6553453215573577202[258] = 0;
   out_6553453215573577202[259] = 0;
   out_6553453215573577202[260] = 0;
   out_6553453215573577202[261] = 0;
   out_6553453215573577202[262] = 0;
   out_6553453215573577202[263] = 0;
   out_6553453215573577202[264] = 1;
   out_6553453215573577202[265] = 0;
   out_6553453215573577202[266] = 0;
   out_6553453215573577202[267] = 0;
   out_6553453215573577202[268] = 0;
   out_6553453215573577202[269] = 0;
   out_6553453215573577202[270] = 0;
   out_6553453215573577202[271] = 0;
   out_6553453215573577202[272] = 0;
   out_6553453215573577202[273] = 0;
   out_6553453215573577202[274] = 0;
   out_6553453215573577202[275] = 0;
   out_6553453215573577202[276] = 0;
   out_6553453215573577202[277] = 0;
   out_6553453215573577202[278] = 0;
   out_6553453215573577202[279] = 0;
   out_6553453215573577202[280] = 0;
   out_6553453215573577202[281] = 0;
   out_6553453215573577202[282] = 0;
   out_6553453215573577202[283] = 0;
   out_6553453215573577202[284] = 0;
   out_6553453215573577202[285] = 0;
   out_6553453215573577202[286] = 1;
   out_6553453215573577202[287] = 0;
   out_6553453215573577202[288] = 0;
   out_6553453215573577202[289] = 0;
   out_6553453215573577202[290] = 0;
   out_6553453215573577202[291] = 0;
   out_6553453215573577202[292] = 0;
   out_6553453215573577202[293] = 0;
   out_6553453215573577202[294] = 0;
   out_6553453215573577202[295] = 0;
   out_6553453215573577202[296] = 0;
   out_6553453215573577202[297] = 0;
   out_6553453215573577202[298] = 0;
   out_6553453215573577202[299] = 0;
   out_6553453215573577202[300] = 0;
   out_6553453215573577202[301] = 0;
   out_6553453215573577202[302] = 0;
   out_6553453215573577202[303] = 0;
   out_6553453215573577202[304] = 0;
   out_6553453215573577202[305] = 0;
   out_6553453215573577202[306] = 0;
   out_6553453215573577202[307] = 0;
   out_6553453215573577202[308] = 1;
   out_6553453215573577202[309] = 0;
   out_6553453215573577202[310] = 0;
   out_6553453215573577202[311] = 0;
   out_6553453215573577202[312] = 0;
   out_6553453215573577202[313] = 0;
   out_6553453215573577202[314] = 0;
   out_6553453215573577202[315] = 0;
   out_6553453215573577202[316] = 0;
   out_6553453215573577202[317] = 0;
   out_6553453215573577202[318] = 0;
   out_6553453215573577202[319] = 0;
   out_6553453215573577202[320] = 0;
   out_6553453215573577202[321] = 0;
   out_6553453215573577202[322] = 0;
   out_6553453215573577202[323] = 0;
   out_6553453215573577202[324] = 0;
   out_6553453215573577202[325] = 0;
   out_6553453215573577202[326] = 0;
   out_6553453215573577202[327] = 0;
   out_6553453215573577202[328] = 0;
   out_6553453215573577202[329] = 0;
   out_6553453215573577202[330] = 1;
   out_6553453215573577202[331] = 0;
   out_6553453215573577202[332] = 0;
   out_6553453215573577202[333] = 0;
   out_6553453215573577202[334] = 0;
   out_6553453215573577202[335] = 0;
   out_6553453215573577202[336] = 0;
   out_6553453215573577202[337] = 0;
   out_6553453215573577202[338] = 0;
   out_6553453215573577202[339] = 0;
   out_6553453215573577202[340] = 0;
   out_6553453215573577202[341] = 0;
   out_6553453215573577202[342] = 0;
   out_6553453215573577202[343] = 0;
   out_6553453215573577202[344] = 0;
   out_6553453215573577202[345] = 0;
   out_6553453215573577202[346] = 0;
   out_6553453215573577202[347] = 0;
   out_6553453215573577202[348] = 0;
   out_6553453215573577202[349] = 0;
   out_6553453215573577202[350] = 0;
   out_6553453215573577202[351] = 0;
   out_6553453215573577202[352] = 1;
   out_6553453215573577202[353] = 0;
   out_6553453215573577202[354] = 0;
   out_6553453215573577202[355] = 0;
   out_6553453215573577202[356] = 0;
   out_6553453215573577202[357] = 0;
   out_6553453215573577202[358] = 0;
   out_6553453215573577202[359] = 0;
   out_6553453215573577202[360] = 0;
   out_6553453215573577202[361] = 0;
   out_6553453215573577202[362] = 0;
   out_6553453215573577202[363] = 0;
   out_6553453215573577202[364] = 0;
   out_6553453215573577202[365] = 0;
   out_6553453215573577202[366] = 0;
   out_6553453215573577202[367] = 0;
   out_6553453215573577202[368] = 0;
   out_6553453215573577202[369] = 0;
   out_6553453215573577202[370] = 0;
   out_6553453215573577202[371] = 0;
   out_6553453215573577202[372] = 0;
   out_6553453215573577202[373] = 0;
   out_6553453215573577202[374] = 1;
   out_6553453215573577202[375] = 0;
   out_6553453215573577202[376] = 0;
   out_6553453215573577202[377] = 0;
   out_6553453215573577202[378] = 0;
   out_6553453215573577202[379] = 0;
   out_6553453215573577202[380] = 0;
   out_6553453215573577202[381] = 0;
   out_6553453215573577202[382] = 0;
   out_6553453215573577202[383] = 0;
   out_6553453215573577202[384] = 0;
   out_6553453215573577202[385] = 0;
   out_6553453215573577202[386] = 0;
   out_6553453215573577202[387] = 0;
   out_6553453215573577202[388] = 0;
   out_6553453215573577202[389] = 0;
   out_6553453215573577202[390] = 0;
   out_6553453215573577202[391] = 0;
   out_6553453215573577202[392] = 0;
   out_6553453215573577202[393] = 0;
   out_6553453215573577202[394] = 0;
   out_6553453215573577202[395] = 0;
   out_6553453215573577202[396] = 1;
   out_6553453215573577202[397] = 0;
   out_6553453215573577202[398] = 0;
   out_6553453215573577202[399] = 0;
   out_6553453215573577202[400] = 0;
   out_6553453215573577202[401] = 0;
   out_6553453215573577202[402] = 0;
   out_6553453215573577202[403] = 0;
   out_6553453215573577202[404] = 0;
   out_6553453215573577202[405] = 0;
   out_6553453215573577202[406] = 0;
   out_6553453215573577202[407] = 0;
   out_6553453215573577202[408] = 0;
   out_6553453215573577202[409] = 0;
   out_6553453215573577202[410] = 0;
   out_6553453215573577202[411] = 0;
   out_6553453215573577202[412] = 0;
   out_6553453215573577202[413] = 0;
   out_6553453215573577202[414] = 0;
   out_6553453215573577202[415] = 0;
   out_6553453215573577202[416] = 0;
   out_6553453215573577202[417] = 0;
   out_6553453215573577202[418] = 1;
   out_6553453215573577202[419] = 0;
   out_6553453215573577202[420] = 0;
   out_6553453215573577202[421] = 0;
   out_6553453215573577202[422] = 0;
   out_6553453215573577202[423] = 0;
   out_6553453215573577202[424] = 0;
   out_6553453215573577202[425] = 0;
   out_6553453215573577202[426] = 0;
   out_6553453215573577202[427] = 0;
   out_6553453215573577202[428] = 0;
   out_6553453215573577202[429] = 0;
   out_6553453215573577202[430] = 0;
   out_6553453215573577202[431] = 0;
   out_6553453215573577202[432] = 0;
   out_6553453215573577202[433] = 0;
   out_6553453215573577202[434] = 0;
   out_6553453215573577202[435] = 0;
   out_6553453215573577202[436] = 0;
   out_6553453215573577202[437] = 0;
   out_6553453215573577202[438] = 0;
   out_6553453215573577202[439] = 0;
   out_6553453215573577202[440] = 1;
}
void h_4(double *state, double *unused, double *out_5706261362768053969) {
   out_5706261362768053969[0] = state[10] + state[13];
   out_5706261362768053969[1] = state[11] + state[14];
   out_5706261362768053969[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7380667893018306527) {
   out_7380667893018306527[0] = 0;
   out_7380667893018306527[1] = 0;
   out_7380667893018306527[2] = 0;
   out_7380667893018306527[3] = 0;
   out_7380667893018306527[4] = 0;
   out_7380667893018306527[5] = 0;
   out_7380667893018306527[6] = 0;
   out_7380667893018306527[7] = 0;
   out_7380667893018306527[8] = 0;
   out_7380667893018306527[9] = 0;
   out_7380667893018306527[10] = 1;
   out_7380667893018306527[11] = 0;
   out_7380667893018306527[12] = 0;
   out_7380667893018306527[13] = 1;
   out_7380667893018306527[14] = 0;
   out_7380667893018306527[15] = 0;
   out_7380667893018306527[16] = 0;
   out_7380667893018306527[17] = 0;
   out_7380667893018306527[18] = 0;
   out_7380667893018306527[19] = 0;
   out_7380667893018306527[20] = 0;
   out_7380667893018306527[21] = 0;
   out_7380667893018306527[22] = 0;
   out_7380667893018306527[23] = 0;
   out_7380667893018306527[24] = 0;
   out_7380667893018306527[25] = 0;
   out_7380667893018306527[26] = 0;
   out_7380667893018306527[27] = 0;
   out_7380667893018306527[28] = 0;
   out_7380667893018306527[29] = 0;
   out_7380667893018306527[30] = 0;
   out_7380667893018306527[31] = 0;
   out_7380667893018306527[32] = 0;
   out_7380667893018306527[33] = 1;
   out_7380667893018306527[34] = 0;
   out_7380667893018306527[35] = 0;
   out_7380667893018306527[36] = 1;
   out_7380667893018306527[37] = 0;
   out_7380667893018306527[38] = 0;
   out_7380667893018306527[39] = 0;
   out_7380667893018306527[40] = 0;
   out_7380667893018306527[41] = 0;
   out_7380667893018306527[42] = 0;
   out_7380667893018306527[43] = 0;
   out_7380667893018306527[44] = 0;
   out_7380667893018306527[45] = 0;
   out_7380667893018306527[46] = 0;
   out_7380667893018306527[47] = 0;
   out_7380667893018306527[48] = 0;
   out_7380667893018306527[49] = 0;
   out_7380667893018306527[50] = 0;
   out_7380667893018306527[51] = 0;
   out_7380667893018306527[52] = 0;
   out_7380667893018306527[53] = 0;
   out_7380667893018306527[54] = 0;
   out_7380667893018306527[55] = 0;
   out_7380667893018306527[56] = 1;
   out_7380667893018306527[57] = 0;
   out_7380667893018306527[58] = 0;
   out_7380667893018306527[59] = 1;
   out_7380667893018306527[60] = 0;
   out_7380667893018306527[61] = 0;
   out_7380667893018306527[62] = 0;
   out_7380667893018306527[63] = 0;
   out_7380667893018306527[64] = 0;
   out_7380667893018306527[65] = 0;
}
void h_9(double *state, double *unused, double *out_2092307496186822377) {
   out_2092307496186822377[0] = state[10];
   out_2092307496186822377[1] = state[11];
   out_2092307496186822377[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7139478246388715882) {
   out_7139478246388715882[0] = 0;
   out_7139478246388715882[1] = 0;
   out_7139478246388715882[2] = 0;
   out_7139478246388715882[3] = 0;
   out_7139478246388715882[4] = 0;
   out_7139478246388715882[5] = 0;
   out_7139478246388715882[6] = 0;
   out_7139478246388715882[7] = 0;
   out_7139478246388715882[8] = 0;
   out_7139478246388715882[9] = 0;
   out_7139478246388715882[10] = 1;
   out_7139478246388715882[11] = 0;
   out_7139478246388715882[12] = 0;
   out_7139478246388715882[13] = 0;
   out_7139478246388715882[14] = 0;
   out_7139478246388715882[15] = 0;
   out_7139478246388715882[16] = 0;
   out_7139478246388715882[17] = 0;
   out_7139478246388715882[18] = 0;
   out_7139478246388715882[19] = 0;
   out_7139478246388715882[20] = 0;
   out_7139478246388715882[21] = 0;
   out_7139478246388715882[22] = 0;
   out_7139478246388715882[23] = 0;
   out_7139478246388715882[24] = 0;
   out_7139478246388715882[25] = 0;
   out_7139478246388715882[26] = 0;
   out_7139478246388715882[27] = 0;
   out_7139478246388715882[28] = 0;
   out_7139478246388715882[29] = 0;
   out_7139478246388715882[30] = 0;
   out_7139478246388715882[31] = 0;
   out_7139478246388715882[32] = 0;
   out_7139478246388715882[33] = 1;
   out_7139478246388715882[34] = 0;
   out_7139478246388715882[35] = 0;
   out_7139478246388715882[36] = 0;
   out_7139478246388715882[37] = 0;
   out_7139478246388715882[38] = 0;
   out_7139478246388715882[39] = 0;
   out_7139478246388715882[40] = 0;
   out_7139478246388715882[41] = 0;
   out_7139478246388715882[42] = 0;
   out_7139478246388715882[43] = 0;
   out_7139478246388715882[44] = 0;
   out_7139478246388715882[45] = 0;
   out_7139478246388715882[46] = 0;
   out_7139478246388715882[47] = 0;
   out_7139478246388715882[48] = 0;
   out_7139478246388715882[49] = 0;
   out_7139478246388715882[50] = 0;
   out_7139478246388715882[51] = 0;
   out_7139478246388715882[52] = 0;
   out_7139478246388715882[53] = 0;
   out_7139478246388715882[54] = 0;
   out_7139478246388715882[55] = 0;
   out_7139478246388715882[56] = 1;
   out_7139478246388715882[57] = 0;
   out_7139478246388715882[58] = 0;
   out_7139478246388715882[59] = 0;
   out_7139478246388715882[60] = 0;
   out_7139478246388715882[61] = 0;
   out_7139478246388715882[62] = 0;
   out_7139478246388715882[63] = 0;
   out_7139478246388715882[64] = 0;
   out_7139478246388715882[65] = 0;
}
void h_10(double *state, double *unused, double *out_105727890266340874) {
   out_105727890266340874[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_105727890266340874[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_105727890266340874[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2504349095668085521) {
   out_2504349095668085521[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2504349095668085521[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2504349095668085521[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2504349095668085521[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2504349095668085521[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2504349095668085521[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2504349095668085521[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2504349095668085521[7] = 0;
   out_2504349095668085521[8] = 0;
   out_2504349095668085521[9] = 0;
   out_2504349095668085521[10] = 0;
   out_2504349095668085521[11] = 0;
   out_2504349095668085521[12] = 0;
   out_2504349095668085521[13] = 0;
   out_2504349095668085521[14] = 0;
   out_2504349095668085521[15] = 0;
   out_2504349095668085521[16] = 1;
   out_2504349095668085521[17] = 0;
   out_2504349095668085521[18] = 0;
   out_2504349095668085521[19] = 1;
   out_2504349095668085521[20] = 0;
   out_2504349095668085521[21] = 0;
   out_2504349095668085521[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2504349095668085521[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2504349095668085521[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2504349095668085521[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2504349095668085521[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2504349095668085521[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2504349095668085521[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2504349095668085521[29] = 0;
   out_2504349095668085521[30] = 0;
   out_2504349095668085521[31] = 0;
   out_2504349095668085521[32] = 0;
   out_2504349095668085521[33] = 0;
   out_2504349095668085521[34] = 0;
   out_2504349095668085521[35] = 0;
   out_2504349095668085521[36] = 0;
   out_2504349095668085521[37] = 0;
   out_2504349095668085521[38] = 0;
   out_2504349095668085521[39] = 1;
   out_2504349095668085521[40] = 0;
   out_2504349095668085521[41] = 0;
   out_2504349095668085521[42] = 1;
   out_2504349095668085521[43] = 0;
   out_2504349095668085521[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2504349095668085521[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2504349095668085521[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2504349095668085521[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2504349095668085521[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2504349095668085521[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2504349095668085521[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2504349095668085521[51] = 0;
   out_2504349095668085521[52] = 0;
   out_2504349095668085521[53] = 0;
   out_2504349095668085521[54] = 0;
   out_2504349095668085521[55] = 0;
   out_2504349095668085521[56] = 0;
   out_2504349095668085521[57] = 0;
   out_2504349095668085521[58] = 0;
   out_2504349095668085521[59] = 0;
   out_2504349095668085521[60] = 0;
   out_2504349095668085521[61] = 0;
   out_2504349095668085521[62] = 1;
   out_2504349095668085521[63] = 0;
   out_2504349095668085521[64] = 0;
   out_2504349095668085521[65] = 1;
}
void h_12(double *state, double *unused, double *out_3207073958905486317) {
   out_3207073958905486317[0] = state[0];
   out_3207073958905486317[1] = state[1];
   out_3207073958905486317[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2361211484986344732) {
   out_2361211484986344732[0] = 1;
   out_2361211484986344732[1] = 0;
   out_2361211484986344732[2] = 0;
   out_2361211484986344732[3] = 0;
   out_2361211484986344732[4] = 0;
   out_2361211484986344732[5] = 0;
   out_2361211484986344732[6] = 0;
   out_2361211484986344732[7] = 0;
   out_2361211484986344732[8] = 0;
   out_2361211484986344732[9] = 0;
   out_2361211484986344732[10] = 0;
   out_2361211484986344732[11] = 0;
   out_2361211484986344732[12] = 0;
   out_2361211484986344732[13] = 0;
   out_2361211484986344732[14] = 0;
   out_2361211484986344732[15] = 0;
   out_2361211484986344732[16] = 0;
   out_2361211484986344732[17] = 0;
   out_2361211484986344732[18] = 0;
   out_2361211484986344732[19] = 0;
   out_2361211484986344732[20] = 0;
   out_2361211484986344732[21] = 0;
   out_2361211484986344732[22] = 0;
   out_2361211484986344732[23] = 1;
   out_2361211484986344732[24] = 0;
   out_2361211484986344732[25] = 0;
   out_2361211484986344732[26] = 0;
   out_2361211484986344732[27] = 0;
   out_2361211484986344732[28] = 0;
   out_2361211484986344732[29] = 0;
   out_2361211484986344732[30] = 0;
   out_2361211484986344732[31] = 0;
   out_2361211484986344732[32] = 0;
   out_2361211484986344732[33] = 0;
   out_2361211484986344732[34] = 0;
   out_2361211484986344732[35] = 0;
   out_2361211484986344732[36] = 0;
   out_2361211484986344732[37] = 0;
   out_2361211484986344732[38] = 0;
   out_2361211484986344732[39] = 0;
   out_2361211484986344732[40] = 0;
   out_2361211484986344732[41] = 0;
   out_2361211484986344732[42] = 0;
   out_2361211484986344732[43] = 0;
   out_2361211484986344732[44] = 0;
   out_2361211484986344732[45] = 0;
   out_2361211484986344732[46] = 1;
   out_2361211484986344732[47] = 0;
   out_2361211484986344732[48] = 0;
   out_2361211484986344732[49] = 0;
   out_2361211484986344732[50] = 0;
   out_2361211484986344732[51] = 0;
   out_2361211484986344732[52] = 0;
   out_2361211484986344732[53] = 0;
   out_2361211484986344732[54] = 0;
   out_2361211484986344732[55] = 0;
   out_2361211484986344732[56] = 0;
   out_2361211484986344732[57] = 0;
   out_2361211484986344732[58] = 0;
   out_2361211484986344732[59] = 0;
   out_2361211484986344732[60] = 0;
   out_2361211484986344732[61] = 0;
   out_2361211484986344732[62] = 0;
   out_2361211484986344732[63] = 0;
   out_2361211484986344732[64] = 0;
   out_2361211484986344732[65] = 0;
}
void h_31(double *state, double *unused, double *out_7167693638028319298) {
   out_7167693638028319298[0] = state[7];
   out_7167693638028319298[1] = state[8];
   out_7167693638028319298[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4014005835645699151) {
   out_4014005835645699151[0] = 0;
   out_4014005835645699151[1] = 0;
   out_4014005835645699151[2] = 0;
   out_4014005835645699151[3] = 0;
   out_4014005835645699151[4] = 0;
   out_4014005835645699151[5] = 0;
   out_4014005835645699151[6] = 0;
   out_4014005835645699151[7] = 1;
   out_4014005835645699151[8] = 0;
   out_4014005835645699151[9] = 0;
   out_4014005835645699151[10] = 0;
   out_4014005835645699151[11] = 0;
   out_4014005835645699151[12] = 0;
   out_4014005835645699151[13] = 0;
   out_4014005835645699151[14] = 0;
   out_4014005835645699151[15] = 0;
   out_4014005835645699151[16] = 0;
   out_4014005835645699151[17] = 0;
   out_4014005835645699151[18] = 0;
   out_4014005835645699151[19] = 0;
   out_4014005835645699151[20] = 0;
   out_4014005835645699151[21] = 0;
   out_4014005835645699151[22] = 0;
   out_4014005835645699151[23] = 0;
   out_4014005835645699151[24] = 0;
   out_4014005835645699151[25] = 0;
   out_4014005835645699151[26] = 0;
   out_4014005835645699151[27] = 0;
   out_4014005835645699151[28] = 0;
   out_4014005835645699151[29] = 0;
   out_4014005835645699151[30] = 1;
   out_4014005835645699151[31] = 0;
   out_4014005835645699151[32] = 0;
   out_4014005835645699151[33] = 0;
   out_4014005835645699151[34] = 0;
   out_4014005835645699151[35] = 0;
   out_4014005835645699151[36] = 0;
   out_4014005835645699151[37] = 0;
   out_4014005835645699151[38] = 0;
   out_4014005835645699151[39] = 0;
   out_4014005835645699151[40] = 0;
   out_4014005835645699151[41] = 0;
   out_4014005835645699151[42] = 0;
   out_4014005835645699151[43] = 0;
   out_4014005835645699151[44] = 0;
   out_4014005835645699151[45] = 0;
   out_4014005835645699151[46] = 0;
   out_4014005835645699151[47] = 0;
   out_4014005835645699151[48] = 0;
   out_4014005835645699151[49] = 0;
   out_4014005835645699151[50] = 0;
   out_4014005835645699151[51] = 0;
   out_4014005835645699151[52] = 0;
   out_4014005835645699151[53] = 1;
   out_4014005835645699151[54] = 0;
   out_4014005835645699151[55] = 0;
   out_4014005835645699151[56] = 0;
   out_4014005835645699151[57] = 0;
   out_4014005835645699151[58] = 0;
   out_4014005835645699151[59] = 0;
   out_4014005835645699151[60] = 0;
   out_4014005835645699151[61] = 0;
   out_4014005835645699151[62] = 0;
   out_4014005835645699151[63] = 0;
   out_4014005835645699151[64] = 0;
   out_4014005835645699151[65] = 0;
}
void h_32(double *state, double *unused, double *out_5811748684591151115) {
   out_5811748684591151115[0] = state[3];
   out_5811748684591151115[1] = state[4];
   out_5811748684591151115[2] = state[5];
   out_5811748684591151115[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3882841050704958682) {
   out_3882841050704958682[0] = 0;
   out_3882841050704958682[1] = 0;
   out_3882841050704958682[2] = 0;
   out_3882841050704958682[3] = 1;
   out_3882841050704958682[4] = 0;
   out_3882841050704958682[5] = 0;
   out_3882841050704958682[6] = 0;
   out_3882841050704958682[7] = 0;
   out_3882841050704958682[8] = 0;
   out_3882841050704958682[9] = 0;
   out_3882841050704958682[10] = 0;
   out_3882841050704958682[11] = 0;
   out_3882841050704958682[12] = 0;
   out_3882841050704958682[13] = 0;
   out_3882841050704958682[14] = 0;
   out_3882841050704958682[15] = 0;
   out_3882841050704958682[16] = 0;
   out_3882841050704958682[17] = 0;
   out_3882841050704958682[18] = 0;
   out_3882841050704958682[19] = 0;
   out_3882841050704958682[20] = 0;
   out_3882841050704958682[21] = 0;
   out_3882841050704958682[22] = 0;
   out_3882841050704958682[23] = 0;
   out_3882841050704958682[24] = 0;
   out_3882841050704958682[25] = 0;
   out_3882841050704958682[26] = 1;
   out_3882841050704958682[27] = 0;
   out_3882841050704958682[28] = 0;
   out_3882841050704958682[29] = 0;
   out_3882841050704958682[30] = 0;
   out_3882841050704958682[31] = 0;
   out_3882841050704958682[32] = 0;
   out_3882841050704958682[33] = 0;
   out_3882841050704958682[34] = 0;
   out_3882841050704958682[35] = 0;
   out_3882841050704958682[36] = 0;
   out_3882841050704958682[37] = 0;
   out_3882841050704958682[38] = 0;
   out_3882841050704958682[39] = 0;
   out_3882841050704958682[40] = 0;
   out_3882841050704958682[41] = 0;
   out_3882841050704958682[42] = 0;
   out_3882841050704958682[43] = 0;
   out_3882841050704958682[44] = 0;
   out_3882841050704958682[45] = 0;
   out_3882841050704958682[46] = 0;
   out_3882841050704958682[47] = 0;
   out_3882841050704958682[48] = 0;
   out_3882841050704958682[49] = 1;
   out_3882841050704958682[50] = 0;
   out_3882841050704958682[51] = 0;
   out_3882841050704958682[52] = 0;
   out_3882841050704958682[53] = 0;
   out_3882841050704958682[54] = 0;
   out_3882841050704958682[55] = 0;
   out_3882841050704958682[56] = 0;
   out_3882841050704958682[57] = 0;
   out_3882841050704958682[58] = 0;
   out_3882841050704958682[59] = 0;
   out_3882841050704958682[60] = 0;
   out_3882841050704958682[61] = 0;
   out_3882841050704958682[62] = 0;
   out_3882841050704958682[63] = 0;
   out_3882841050704958682[64] = 0;
   out_3882841050704958682[65] = 0;
   out_3882841050704958682[66] = 0;
   out_3882841050704958682[67] = 0;
   out_3882841050704958682[68] = 0;
   out_3882841050704958682[69] = 0;
   out_3882841050704958682[70] = 0;
   out_3882841050704958682[71] = 0;
   out_3882841050704958682[72] = 1;
   out_3882841050704958682[73] = 0;
   out_3882841050704958682[74] = 0;
   out_3882841050704958682[75] = 0;
   out_3882841050704958682[76] = 0;
   out_3882841050704958682[77] = 0;
   out_3882841050704958682[78] = 0;
   out_3882841050704958682[79] = 0;
   out_3882841050704958682[80] = 0;
   out_3882841050704958682[81] = 0;
   out_3882841050704958682[82] = 0;
   out_3882841050704958682[83] = 0;
   out_3882841050704958682[84] = 0;
   out_3882841050704958682[85] = 0;
   out_3882841050704958682[86] = 0;
   out_3882841050704958682[87] = 0;
}
void h_13(double *state, double *unused, double *out_1221493773571756941) {
   out_1221493773571756941[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1221493773571756941[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1221493773571756941[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6120959287865860338) {
   out_6120959287865860338[0] = 0;
   out_6120959287865860338[1] = 0;
   out_6120959287865860338[2] = 0;
   out_6120959287865860338[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6120959287865860338[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6120959287865860338[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6120959287865860338[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6120959287865860338[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6120959287865860338[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6120959287865860338[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6120959287865860338[10] = 0;
   out_6120959287865860338[11] = 0;
   out_6120959287865860338[12] = 0;
   out_6120959287865860338[13] = 0;
   out_6120959287865860338[14] = 0;
   out_6120959287865860338[15] = 0;
   out_6120959287865860338[16] = 0;
   out_6120959287865860338[17] = 0;
   out_6120959287865860338[18] = 0;
   out_6120959287865860338[19] = 0;
   out_6120959287865860338[20] = 0;
   out_6120959287865860338[21] = 0;
   out_6120959287865860338[22] = 0;
   out_6120959287865860338[23] = 0;
   out_6120959287865860338[24] = 0;
   out_6120959287865860338[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6120959287865860338[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6120959287865860338[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6120959287865860338[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6120959287865860338[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6120959287865860338[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6120959287865860338[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6120959287865860338[32] = 0;
   out_6120959287865860338[33] = 0;
   out_6120959287865860338[34] = 0;
   out_6120959287865860338[35] = 0;
   out_6120959287865860338[36] = 0;
   out_6120959287865860338[37] = 0;
   out_6120959287865860338[38] = 0;
   out_6120959287865860338[39] = 0;
   out_6120959287865860338[40] = 0;
   out_6120959287865860338[41] = 0;
   out_6120959287865860338[42] = 0;
   out_6120959287865860338[43] = 0;
   out_6120959287865860338[44] = 0;
   out_6120959287865860338[45] = 0;
   out_6120959287865860338[46] = 0;
   out_6120959287865860338[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6120959287865860338[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6120959287865860338[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6120959287865860338[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6120959287865860338[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6120959287865860338[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6120959287865860338[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6120959287865860338[54] = 0;
   out_6120959287865860338[55] = 0;
   out_6120959287865860338[56] = 0;
   out_6120959287865860338[57] = 0;
   out_6120959287865860338[58] = 0;
   out_6120959287865860338[59] = 0;
   out_6120959287865860338[60] = 0;
   out_6120959287865860338[61] = 0;
   out_6120959287865860338[62] = 0;
   out_6120959287865860338[63] = 0;
   out_6120959287865860338[64] = 0;
   out_6120959287865860338[65] = 0;
}
void h_14(double *state, double *unused, double *out_2092307496186822377) {
   out_2092307496186822377[0] = state[10];
   out_2092307496186822377[1] = state[11];
   out_2092307496186822377[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7139478246388715882) {
   out_7139478246388715882[0] = 0;
   out_7139478246388715882[1] = 0;
   out_7139478246388715882[2] = 0;
   out_7139478246388715882[3] = 0;
   out_7139478246388715882[4] = 0;
   out_7139478246388715882[5] = 0;
   out_7139478246388715882[6] = 0;
   out_7139478246388715882[7] = 0;
   out_7139478246388715882[8] = 0;
   out_7139478246388715882[9] = 0;
   out_7139478246388715882[10] = 1;
   out_7139478246388715882[11] = 0;
   out_7139478246388715882[12] = 0;
   out_7139478246388715882[13] = 0;
   out_7139478246388715882[14] = 0;
   out_7139478246388715882[15] = 0;
   out_7139478246388715882[16] = 0;
   out_7139478246388715882[17] = 0;
   out_7139478246388715882[18] = 0;
   out_7139478246388715882[19] = 0;
   out_7139478246388715882[20] = 0;
   out_7139478246388715882[21] = 0;
   out_7139478246388715882[22] = 0;
   out_7139478246388715882[23] = 0;
   out_7139478246388715882[24] = 0;
   out_7139478246388715882[25] = 0;
   out_7139478246388715882[26] = 0;
   out_7139478246388715882[27] = 0;
   out_7139478246388715882[28] = 0;
   out_7139478246388715882[29] = 0;
   out_7139478246388715882[30] = 0;
   out_7139478246388715882[31] = 0;
   out_7139478246388715882[32] = 0;
   out_7139478246388715882[33] = 1;
   out_7139478246388715882[34] = 0;
   out_7139478246388715882[35] = 0;
   out_7139478246388715882[36] = 0;
   out_7139478246388715882[37] = 0;
   out_7139478246388715882[38] = 0;
   out_7139478246388715882[39] = 0;
   out_7139478246388715882[40] = 0;
   out_7139478246388715882[41] = 0;
   out_7139478246388715882[42] = 0;
   out_7139478246388715882[43] = 0;
   out_7139478246388715882[44] = 0;
   out_7139478246388715882[45] = 0;
   out_7139478246388715882[46] = 0;
   out_7139478246388715882[47] = 0;
   out_7139478246388715882[48] = 0;
   out_7139478246388715882[49] = 0;
   out_7139478246388715882[50] = 0;
   out_7139478246388715882[51] = 0;
   out_7139478246388715882[52] = 0;
   out_7139478246388715882[53] = 0;
   out_7139478246388715882[54] = 0;
   out_7139478246388715882[55] = 0;
   out_7139478246388715882[56] = 1;
   out_7139478246388715882[57] = 0;
   out_7139478246388715882[58] = 0;
   out_7139478246388715882[59] = 0;
   out_7139478246388715882[60] = 0;
   out_7139478246388715882[61] = 0;
   out_7139478246388715882[62] = 0;
   out_7139478246388715882[63] = 0;
   out_7139478246388715882[64] = 0;
   out_7139478246388715882[65] = 0;
}
void h_33(double *state, double *unused, double *out_8598522805817106162) {
   out_8598522805817106162[0] = state[16];
   out_8598522805817106162[1] = state[17];
   out_8598522805817106162[2] = state[18];
}
void H_33(double *state, double *unused, double *out_863448831006841547) {
   out_863448831006841547[0] = 0;
   out_863448831006841547[1] = 0;
   out_863448831006841547[2] = 0;
   out_863448831006841547[3] = 0;
   out_863448831006841547[4] = 0;
   out_863448831006841547[5] = 0;
   out_863448831006841547[6] = 0;
   out_863448831006841547[7] = 0;
   out_863448831006841547[8] = 0;
   out_863448831006841547[9] = 0;
   out_863448831006841547[10] = 0;
   out_863448831006841547[11] = 0;
   out_863448831006841547[12] = 0;
   out_863448831006841547[13] = 0;
   out_863448831006841547[14] = 0;
   out_863448831006841547[15] = 0;
   out_863448831006841547[16] = 1;
   out_863448831006841547[17] = 0;
   out_863448831006841547[18] = 0;
   out_863448831006841547[19] = 0;
   out_863448831006841547[20] = 0;
   out_863448831006841547[21] = 0;
   out_863448831006841547[22] = 0;
   out_863448831006841547[23] = 0;
   out_863448831006841547[24] = 0;
   out_863448831006841547[25] = 0;
   out_863448831006841547[26] = 0;
   out_863448831006841547[27] = 0;
   out_863448831006841547[28] = 0;
   out_863448831006841547[29] = 0;
   out_863448831006841547[30] = 0;
   out_863448831006841547[31] = 0;
   out_863448831006841547[32] = 0;
   out_863448831006841547[33] = 0;
   out_863448831006841547[34] = 0;
   out_863448831006841547[35] = 0;
   out_863448831006841547[36] = 0;
   out_863448831006841547[37] = 0;
   out_863448831006841547[38] = 0;
   out_863448831006841547[39] = 1;
   out_863448831006841547[40] = 0;
   out_863448831006841547[41] = 0;
   out_863448831006841547[42] = 0;
   out_863448831006841547[43] = 0;
   out_863448831006841547[44] = 0;
   out_863448831006841547[45] = 0;
   out_863448831006841547[46] = 0;
   out_863448831006841547[47] = 0;
   out_863448831006841547[48] = 0;
   out_863448831006841547[49] = 0;
   out_863448831006841547[50] = 0;
   out_863448831006841547[51] = 0;
   out_863448831006841547[52] = 0;
   out_863448831006841547[53] = 0;
   out_863448831006841547[54] = 0;
   out_863448831006841547[55] = 0;
   out_863448831006841547[56] = 0;
   out_863448831006841547[57] = 0;
   out_863448831006841547[58] = 0;
   out_863448831006841547[59] = 0;
   out_863448831006841547[60] = 0;
   out_863448831006841547[61] = 0;
   out_863448831006841547[62] = 1;
   out_863448831006841547[63] = 0;
   out_863448831006841547[64] = 0;
   out_863448831006841547[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8573827050636567067) {
  H(in_vec, out_8573827050636567067);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2292859409783966048) {
  err_fun(nom_x, delta_x, out_2292859409783966048);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7466509707901054724) {
  inv_err_fun(nom_x, true_x, out_7466509707901054724);
}
void live_H_mod_fun(double *state, double *out_4810487012885038206) {
  H_mod_fun(state, out_4810487012885038206);
}
void live_f_fun(double *state, double dt, double *out_7925576684396976167) {
  f_fun(state,  dt, out_7925576684396976167);
}
void live_F_fun(double *state, double dt, double *out_6553453215573577202) {
  F_fun(state,  dt, out_6553453215573577202);
}
void live_h_4(double *state, double *unused, double *out_5706261362768053969) {
  h_4(state, unused, out_5706261362768053969);
}
void live_H_4(double *state, double *unused, double *out_7380667893018306527) {
  H_4(state, unused, out_7380667893018306527);
}
void live_h_9(double *state, double *unused, double *out_2092307496186822377) {
  h_9(state, unused, out_2092307496186822377);
}
void live_H_9(double *state, double *unused, double *out_7139478246388715882) {
  H_9(state, unused, out_7139478246388715882);
}
void live_h_10(double *state, double *unused, double *out_105727890266340874) {
  h_10(state, unused, out_105727890266340874);
}
void live_H_10(double *state, double *unused, double *out_2504349095668085521) {
  H_10(state, unused, out_2504349095668085521);
}
void live_h_12(double *state, double *unused, double *out_3207073958905486317) {
  h_12(state, unused, out_3207073958905486317);
}
void live_H_12(double *state, double *unused, double *out_2361211484986344732) {
  H_12(state, unused, out_2361211484986344732);
}
void live_h_31(double *state, double *unused, double *out_7167693638028319298) {
  h_31(state, unused, out_7167693638028319298);
}
void live_H_31(double *state, double *unused, double *out_4014005835645699151) {
  H_31(state, unused, out_4014005835645699151);
}
void live_h_32(double *state, double *unused, double *out_5811748684591151115) {
  h_32(state, unused, out_5811748684591151115);
}
void live_H_32(double *state, double *unused, double *out_3882841050704958682) {
  H_32(state, unused, out_3882841050704958682);
}
void live_h_13(double *state, double *unused, double *out_1221493773571756941) {
  h_13(state, unused, out_1221493773571756941);
}
void live_H_13(double *state, double *unused, double *out_6120959287865860338) {
  H_13(state, unused, out_6120959287865860338);
}
void live_h_14(double *state, double *unused, double *out_2092307496186822377) {
  h_14(state, unused, out_2092307496186822377);
}
void live_H_14(double *state, double *unused, double *out_7139478246388715882) {
  H_14(state, unused, out_7139478246388715882);
}
void live_h_33(double *state, double *unused, double *out_8598522805817106162) {
  h_33(state, unused, out_8598522805817106162);
}
void live_H_33(double *state, double *unused, double *out_863448831006841547) {
  H_33(state, unused, out_863448831006841547);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
