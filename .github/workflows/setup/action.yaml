name: 'openpilot env setup'
description: 'Set up environment for openpilot'
inputs:
  is_retried:
    description: "A mock param that asserts that this setup is for a retry operation"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - shell: bash
      if: ${{ inputs.is_retried == 'false' }}
      run: |
        echo "You should not run this action directly. Use setup-with-retry instead"
        exit 1

    - name: Cache apt packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-${{ hashFiles('**/install_ubuntu_dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends qttools5-dev qttools5-dev-tools libeigen3-dev opencl-headers ocl-icd-opencl-dev git-lfs libzmq3-dev libusb-1.0-0-dev libcapnp-dev portaudio19-dev qtbase5-dev gcc-arm-none-eabi capnproto $(grep -oP 'sudo apt-get install -y --no-install-recommends \K.*' tools/install_ubuntu_dependencies.sh)
      shell: bash

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        sudo pip install poetry
        sudo poetry config virtualenvs.create false
        sudo poetry install --no-interaction --no-ansi
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set Environment Variable
      run: echo "PYTHONPATH=${GITHUB_WORKSPACE}:${PYTHONPATH}" >> $GITHUB_ENV
      shell: bash
