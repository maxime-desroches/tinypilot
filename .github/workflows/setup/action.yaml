name: 'openpilot env setup'

inputs:
  is_retried:
    description: 'A mock param that asserts that this setup is for a retry operation'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - shell: bash
      if: ${{ inputs.is_retried == 'false' }}
      run: |
        echo "You should not run this action directly. Use setup-with-retry instead"
        exit 1

    # Install specific Python version using pyenv
    - name: Install pyenv
      run: |
        curl https://pyenv.run | bash
      shell: bash

    - name: Install Python 3.11.X
      run: |
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init --path)"
        pyenv install 3.11.4 -s
        pyenv global 3.11.4
      shell: bash

    # Verify Python version
    - name: Check Python version
      run: |
        python --version
      shell: bash

    # Install and Cache Poetry dependencies
    - name: Install Poetry
      run: pip install poetry
      shell: bash

    - name: Cache Poetry dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies with Poetry
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-root
      shell: bash

    # Setup Complete
    - name: Setup Complete
      run: echo "Setup completed successfully"
      shell: bash