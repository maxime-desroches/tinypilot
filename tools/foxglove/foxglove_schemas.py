RAW_IMAGE = {
  "title": "foxglove.RawImage",
  "description": "A raw image",
  "$comment": "Generated by https://github.com/foxglove/schemas",
  "type": "object",
  "properties": {
    "timestamp": {
      "type": "object",
      "title": "time",
      "properties": {
        "sec": {
          "type": "integer",
          "minimum": 0
        },
        "nsec": {
          "type": "integer",
          "minimum": 0,
          "maximum": 999999999
        }
      },
      "description": "Timestamp of image"
    },
    "frame_id": {
      "type": "string",
      "description": "Frame of reference for the image. The origin of the frame is the optical center of the camera. " \
                     "+x points to the right in the image, +y points down, and +z points into the plane of the image."
    },
    "width": {
      "type": "integer",
      "minimum": 0,
      "description": "Image width"
    },
    "height": {
      "type": "integer",
      "minimum": 0,
      "description": "Image height"
    },
    "encoding": {
      "type": "string",
      "description": "Encoding of the raw image data\n\nSupported values: `8UC1`, `8UC3`, `16UC1`, `32FC1`, " \
                     "`bayer_bggr8`, `bayer_gbrg8`, `bayer_grbg8`, `bayer_rggb8`, `bgr8`, `bgra8`, `mono8`, `mono16`," \
                     " `rgb8`, `rgba8`, `uyvy` or `yuv422`, `yuyv` or `yuv422_yuy2`"
    },
    "step": {
      "type": "integer",
      "minimum": 0,
      "description": "Byte length of a single row"
    },
    "data": {
      "type": "string",
      "contentEncoding": "base64",
      "description": "Raw image data"
    }
  }
}

COMPRESSED_IMAGE = {
  "title": "foxglove.CompressedImage",
  "description": "A compressed image",
  "$comment": "Generated by https://github.com/foxglove/schemas",
  "type": "object",
  "properties": {
    "timestamp": {
      "type": "object",
      "title": "time",
      "properties": {
        "sec": {
          "type": "integer",
          "minimum": 0
        },
        "nsec": {
          "type": "integer",
          "minimum": 0,
          "maximum": 999999999
        }
      },
      "description": "Timestamp of image"
    },
    "frame_id": {
      "type": "string",
      "description": "Frame of reference for the image. The origin of the frame is the optical center of the camera. "\
                     "+x points to the right in the image, +y points down, and +z points into the plane of the image."
    },
    "data": {
      "type": "string",
      "contentEncoding": "base64",
      "description": "Compressed image data"
    },
    "format": {
      "type": "string",
      "description": "Image format\n\nSupported values: image media types supported by Chrome, such as `webp`, `jpeg`, `png`"
    }
  }
}

FRAME_TRANSFORM = {
  "title": "foxglove.FrameTransform",
  "description": "A transform between two reference frames in 3D space",
  "$comment": "Generated by https://github.com/foxglove/schemas",
  "type": "object",
  "properties": {
    "timestamp": {
      "type": "object",
      "title": "time",
      "properties": {
        "sec": {
          "type": "integer",
          "minimum": 0
        },
        "nsec": {
          "type": "integer",
          "minimum": 0,
          "maximum": 999999999
        }
      },
      "description": "Timestamp of transform"
    },
    "parent_frame_id": {
      "type": "string",
      "description": "Name of the parent frame"
    },
    "child_frame_id": {
      "type": "string",
      "description": "Name of the child frame"
    },
    "translation": {
      "title": "foxglove.Vector3",
      "description": "Translation component of the transform",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "x coordinate length"
        },
        "y": {
          "type": "number",
          "description": "y coordinate length"
        },
        "z": {
          "type": "number",
          "description": "z coordinate length"
        }
      }
    },
    "rotation": {
      "title": "foxglove.Quaternion",
      "description": "Rotation component of the transform",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "x value"
        },
        "y": {
          "type": "number",
          "description": "y value"
        },
        "z": {
          "type": "number",
          "description": "z value"
        },
        "w": {
          "type": "number",
          "description": "w value"
        }
      }
    }
  }
}

LOCATION_FIX = {
  "title": "foxglove.LocationFix",
  "description": "A navigation satellite fix for any Global Navigation Satellite System",
  "$comment": "Generated by https://github.com/foxglove/schemas",
  "type": "object",
  "properties": {
    "timestamp": {
      "type": "object",
      "title": "time",
      "properties": {
        "sec": {
          "type": "integer",
          "minimum": 0
        },
        "nsec": {
          "type": "integer",
          "minimum": 0,
          "maximum": 999999999
        }
      },
      "description": "Timestamp of the message"
    },
    "frame_id": {
      "type": "string",
      "description": "Frame for the sensor. Latitude and longitude readings are at the origin of the frame."
    },
    "latitude": {
      "type": "number",
      "description": "Latitude in degrees"
    },
    "longitude": {
      "type": "number",
      "description": "Longitude in degrees"
    },
    "altitude": {
      "type": "number",
      "description": "Altitude in meters"
    },
    "position_covariance": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 9,
      "maxItems": 9,
      "description": "Position covariance (m^2) defined relative to a tangential plane through the reported position." \
                     " The components are East, North, and Up (ENU), in row-major order."
    },
    "position_covariance_type": {
      "title": "foxglove.PositionCovarianceType",
      "description": "If `position_covariance` is available, `position_covariance_type` must be set to indicate the type of covariance.",
      "oneOf": [
        {
          "title": "UNKNOWN",
          "const": 0
        },
        {
          "title": "APPROXIMATED",
          "const": 1
        },
        {
          "title": "DIAGONAL_KNOWN",
          "const": 2
        },
        {
          "title": "KNOWN",
          "const": 3
        }
      ]
    }
  }
}

LOG = {
  "title": "foxglove.Log",
  "description": "A log message",
  "$comment": "Generated by https://github.com/foxglove/schemas",
  "type": "object",
  "properties": {
    "timestamp": {
      "type": "object",
      "title": "time",
      "properties": {
        "sec": {
          "type": "integer",
          "minimum": 0
        },
        "nsec": {
          "type": "integer",
          "minimum": 0,
          "maximum": 999999999
        }
      },
      "description": "Timestamp of log message"
    },
    "level": {
      "title": "foxglove.LogLevel",
      "description": "Log level",
      "oneOf": [
        {
          "title": "UNKNOWN",
          "const": 0
        },
        {
          "title": "DEBUG",
          "const": 1
        },
        {
          "title": "INFO",
          "const": 2
        },
        {
          "title": "WARNING",
          "const": 3
        },
        {
          "title": "ERROR",
          "const": 4
        },
        {
          "title": "FATAL",
          "const": 5
        }
      ]
    },
    "message": {
      "type": "string",
      "description": "Log message"
    },
    "name": {
      "type": "string",
      "description": "Process or node name"
    },
    "file": {
      "type": "string",
      "description": "Filename"
    },
    "line": {
      "type": "integer",
      "minimum": 0,
      "description": "Line number in the file"
    }
  }
}
