#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6682464975442471769) {
   out_6682464975442471769[0] = 0;
   out_6682464975442471769[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6682464975442471769[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6682464975442471769[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6682464975442471769[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6682464975442471769[5] = -sin(in_vec[1]);
   out_6682464975442471769[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6682464975442471769[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6682464975442471769[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6682464975442471769[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6682464975442471769[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6682464975442471769[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6682464975442471769[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6682464975442471769[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6682464975442471769[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6682464975442471769[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6682464975442471769[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6682464975442471769[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8729540985056067358) {
   out_8729540985056067358[0] = delta_x[0] + nom_x[0];
   out_8729540985056067358[1] = delta_x[1] + nom_x[1];
   out_8729540985056067358[2] = delta_x[2] + nom_x[2];
   out_8729540985056067358[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8729540985056067358[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8729540985056067358[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8729540985056067358[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8729540985056067358[7] = delta_x[6] + nom_x[7];
   out_8729540985056067358[8] = delta_x[7] + nom_x[8];
   out_8729540985056067358[9] = delta_x[8] + nom_x[9];
   out_8729540985056067358[10] = delta_x[9] + nom_x[10];
   out_8729540985056067358[11] = delta_x[10] + nom_x[11];
   out_8729540985056067358[12] = delta_x[11] + nom_x[12];
   out_8729540985056067358[13] = delta_x[12] + nom_x[13];
   out_8729540985056067358[14] = delta_x[13] + nom_x[14];
   out_8729540985056067358[15] = delta_x[14] + nom_x[15];
   out_8729540985056067358[16] = delta_x[15] + nom_x[16];
   out_8729540985056067358[17] = delta_x[16] + nom_x[17];
   out_8729540985056067358[18] = delta_x[17] + nom_x[18];
   out_8729540985056067358[19] = delta_x[18] + nom_x[19];
   out_8729540985056067358[20] = delta_x[19] + nom_x[20];
   out_8729540985056067358[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4100406716172023109) {
   out_4100406716172023109[0] = -nom_x[0] + true_x[0];
   out_4100406716172023109[1] = -nom_x[1] + true_x[1];
   out_4100406716172023109[2] = -nom_x[2] + true_x[2];
   out_4100406716172023109[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4100406716172023109[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4100406716172023109[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4100406716172023109[6] = -nom_x[7] + true_x[7];
   out_4100406716172023109[7] = -nom_x[8] + true_x[8];
   out_4100406716172023109[8] = -nom_x[9] + true_x[9];
   out_4100406716172023109[9] = -nom_x[10] + true_x[10];
   out_4100406716172023109[10] = -nom_x[11] + true_x[11];
   out_4100406716172023109[11] = -nom_x[12] + true_x[12];
   out_4100406716172023109[12] = -nom_x[13] + true_x[13];
   out_4100406716172023109[13] = -nom_x[14] + true_x[14];
   out_4100406716172023109[14] = -nom_x[15] + true_x[15];
   out_4100406716172023109[15] = -nom_x[16] + true_x[16];
   out_4100406716172023109[16] = -nom_x[17] + true_x[17];
   out_4100406716172023109[17] = -nom_x[18] + true_x[18];
   out_4100406716172023109[18] = -nom_x[19] + true_x[19];
   out_4100406716172023109[19] = -nom_x[20] + true_x[20];
   out_4100406716172023109[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4365735452148030976) {
   out_4365735452148030976[0] = 1.0;
   out_4365735452148030976[1] = 0;
   out_4365735452148030976[2] = 0;
   out_4365735452148030976[3] = 0;
   out_4365735452148030976[4] = 0;
   out_4365735452148030976[5] = 0;
   out_4365735452148030976[6] = 0;
   out_4365735452148030976[7] = 0;
   out_4365735452148030976[8] = 0;
   out_4365735452148030976[9] = 0;
   out_4365735452148030976[10] = 0;
   out_4365735452148030976[11] = 0;
   out_4365735452148030976[12] = 0;
   out_4365735452148030976[13] = 0;
   out_4365735452148030976[14] = 0;
   out_4365735452148030976[15] = 0;
   out_4365735452148030976[16] = 0;
   out_4365735452148030976[17] = 0;
   out_4365735452148030976[18] = 0;
   out_4365735452148030976[19] = 0;
   out_4365735452148030976[20] = 0;
   out_4365735452148030976[21] = 0;
   out_4365735452148030976[22] = 1.0;
   out_4365735452148030976[23] = 0;
   out_4365735452148030976[24] = 0;
   out_4365735452148030976[25] = 0;
   out_4365735452148030976[26] = 0;
   out_4365735452148030976[27] = 0;
   out_4365735452148030976[28] = 0;
   out_4365735452148030976[29] = 0;
   out_4365735452148030976[30] = 0;
   out_4365735452148030976[31] = 0;
   out_4365735452148030976[32] = 0;
   out_4365735452148030976[33] = 0;
   out_4365735452148030976[34] = 0;
   out_4365735452148030976[35] = 0;
   out_4365735452148030976[36] = 0;
   out_4365735452148030976[37] = 0;
   out_4365735452148030976[38] = 0;
   out_4365735452148030976[39] = 0;
   out_4365735452148030976[40] = 0;
   out_4365735452148030976[41] = 0;
   out_4365735452148030976[42] = 0;
   out_4365735452148030976[43] = 0;
   out_4365735452148030976[44] = 1.0;
   out_4365735452148030976[45] = 0;
   out_4365735452148030976[46] = 0;
   out_4365735452148030976[47] = 0;
   out_4365735452148030976[48] = 0;
   out_4365735452148030976[49] = 0;
   out_4365735452148030976[50] = 0;
   out_4365735452148030976[51] = 0;
   out_4365735452148030976[52] = 0;
   out_4365735452148030976[53] = 0;
   out_4365735452148030976[54] = 0;
   out_4365735452148030976[55] = 0;
   out_4365735452148030976[56] = 0;
   out_4365735452148030976[57] = 0;
   out_4365735452148030976[58] = 0;
   out_4365735452148030976[59] = 0;
   out_4365735452148030976[60] = 0;
   out_4365735452148030976[61] = 0;
   out_4365735452148030976[62] = 0;
   out_4365735452148030976[63] = 0;
   out_4365735452148030976[64] = 0;
   out_4365735452148030976[65] = 0;
   out_4365735452148030976[66] = -0.5*state[4];
   out_4365735452148030976[67] = -0.5*state[5];
   out_4365735452148030976[68] = -0.5*state[6];
   out_4365735452148030976[69] = 0;
   out_4365735452148030976[70] = 0;
   out_4365735452148030976[71] = 0;
   out_4365735452148030976[72] = 0;
   out_4365735452148030976[73] = 0;
   out_4365735452148030976[74] = 0;
   out_4365735452148030976[75] = 0;
   out_4365735452148030976[76] = 0;
   out_4365735452148030976[77] = 0;
   out_4365735452148030976[78] = 0;
   out_4365735452148030976[79] = 0;
   out_4365735452148030976[80] = 0;
   out_4365735452148030976[81] = 0;
   out_4365735452148030976[82] = 0;
   out_4365735452148030976[83] = 0;
   out_4365735452148030976[84] = 0;
   out_4365735452148030976[85] = 0;
   out_4365735452148030976[86] = 0;
   out_4365735452148030976[87] = 0.5*state[3];
   out_4365735452148030976[88] = 0.5*state[6];
   out_4365735452148030976[89] = -0.5*state[5];
   out_4365735452148030976[90] = 0;
   out_4365735452148030976[91] = 0;
   out_4365735452148030976[92] = 0;
   out_4365735452148030976[93] = 0;
   out_4365735452148030976[94] = 0;
   out_4365735452148030976[95] = 0;
   out_4365735452148030976[96] = 0;
   out_4365735452148030976[97] = 0;
   out_4365735452148030976[98] = 0;
   out_4365735452148030976[99] = 0;
   out_4365735452148030976[100] = 0;
   out_4365735452148030976[101] = 0;
   out_4365735452148030976[102] = 0;
   out_4365735452148030976[103] = 0;
   out_4365735452148030976[104] = 0;
   out_4365735452148030976[105] = 0;
   out_4365735452148030976[106] = 0;
   out_4365735452148030976[107] = 0;
   out_4365735452148030976[108] = -0.5*state[6];
   out_4365735452148030976[109] = 0.5*state[3];
   out_4365735452148030976[110] = 0.5*state[4];
   out_4365735452148030976[111] = 0;
   out_4365735452148030976[112] = 0;
   out_4365735452148030976[113] = 0;
   out_4365735452148030976[114] = 0;
   out_4365735452148030976[115] = 0;
   out_4365735452148030976[116] = 0;
   out_4365735452148030976[117] = 0;
   out_4365735452148030976[118] = 0;
   out_4365735452148030976[119] = 0;
   out_4365735452148030976[120] = 0;
   out_4365735452148030976[121] = 0;
   out_4365735452148030976[122] = 0;
   out_4365735452148030976[123] = 0;
   out_4365735452148030976[124] = 0;
   out_4365735452148030976[125] = 0;
   out_4365735452148030976[126] = 0;
   out_4365735452148030976[127] = 0;
   out_4365735452148030976[128] = 0;
   out_4365735452148030976[129] = 0.5*state[5];
   out_4365735452148030976[130] = -0.5*state[4];
   out_4365735452148030976[131] = 0.5*state[3];
   out_4365735452148030976[132] = 0;
   out_4365735452148030976[133] = 0;
   out_4365735452148030976[134] = 0;
   out_4365735452148030976[135] = 0;
   out_4365735452148030976[136] = 0;
   out_4365735452148030976[137] = 0;
   out_4365735452148030976[138] = 0;
   out_4365735452148030976[139] = 0;
   out_4365735452148030976[140] = 0;
   out_4365735452148030976[141] = 0;
   out_4365735452148030976[142] = 0;
   out_4365735452148030976[143] = 0;
   out_4365735452148030976[144] = 0;
   out_4365735452148030976[145] = 0;
   out_4365735452148030976[146] = 0;
   out_4365735452148030976[147] = 0;
   out_4365735452148030976[148] = 0;
   out_4365735452148030976[149] = 0;
   out_4365735452148030976[150] = 0;
   out_4365735452148030976[151] = 0;
   out_4365735452148030976[152] = 0;
   out_4365735452148030976[153] = 1.0;
   out_4365735452148030976[154] = 0;
   out_4365735452148030976[155] = 0;
   out_4365735452148030976[156] = 0;
   out_4365735452148030976[157] = 0;
   out_4365735452148030976[158] = 0;
   out_4365735452148030976[159] = 0;
   out_4365735452148030976[160] = 0;
   out_4365735452148030976[161] = 0;
   out_4365735452148030976[162] = 0;
   out_4365735452148030976[163] = 0;
   out_4365735452148030976[164] = 0;
   out_4365735452148030976[165] = 0;
   out_4365735452148030976[166] = 0;
   out_4365735452148030976[167] = 0;
   out_4365735452148030976[168] = 0;
   out_4365735452148030976[169] = 0;
   out_4365735452148030976[170] = 0;
   out_4365735452148030976[171] = 0;
   out_4365735452148030976[172] = 0;
   out_4365735452148030976[173] = 0;
   out_4365735452148030976[174] = 0;
   out_4365735452148030976[175] = 1.0;
   out_4365735452148030976[176] = 0;
   out_4365735452148030976[177] = 0;
   out_4365735452148030976[178] = 0;
   out_4365735452148030976[179] = 0;
   out_4365735452148030976[180] = 0;
   out_4365735452148030976[181] = 0;
   out_4365735452148030976[182] = 0;
   out_4365735452148030976[183] = 0;
   out_4365735452148030976[184] = 0;
   out_4365735452148030976[185] = 0;
   out_4365735452148030976[186] = 0;
   out_4365735452148030976[187] = 0;
   out_4365735452148030976[188] = 0;
   out_4365735452148030976[189] = 0;
   out_4365735452148030976[190] = 0;
   out_4365735452148030976[191] = 0;
   out_4365735452148030976[192] = 0;
   out_4365735452148030976[193] = 0;
   out_4365735452148030976[194] = 0;
   out_4365735452148030976[195] = 0;
   out_4365735452148030976[196] = 0;
   out_4365735452148030976[197] = 1.0;
   out_4365735452148030976[198] = 0;
   out_4365735452148030976[199] = 0;
   out_4365735452148030976[200] = 0;
   out_4365735452148030976[201] = 0;
   out_4365735452148030976[202] = 0;
   out_4365735452148030976[203] = 0;
   out_4365735452148030976[204] = 0;
   out_4365735452148030976[205] = 0;
   out_4365735452148030976[206] = 0;
   out_4365735452148030976[207] = 0;
   out_4365735452148030976[208] = 0;
   out_4365735452148030976[209] = 0;
   out_4365735452148030976[210] = 0;
   out_4365735452148030976[211] = 0;
   out_4365735452148030976[212] = 0;
   out_4365735452148030976[213] = 0;
   out_4365735452148030976[214] = 0;
   out_4365735452148030976[215] = 0;
   out_4365735452148030976[216] = 0;
   out_4365735452148030976[217] = 0;
   out_4365735452148030976[218] = 0;
   out_4365735452148030976[219] = 1.0;
   out_4365735452148030976[220] = 0;
   out_4365735452148030976[221] = 0;
   out_4365735452148030976[222] = 0;
   out_4365735452148030976[223] = 0;
   out_4365735452148030976[224] = 0;
   out_4365735452148030976[225] = 0;
   out_4365735452148030976[226] = 0;
   out_4365735452148030976[227] = 0;
   out_4365735452148030976[228] = 0;
   out_4365735452148030976[229] = 0;
   out_4365735452148030976[230] = 0;
   out_4365735452148030976[231] = 0;
   out_4365735452148030976[232] = 0;
   out_4365735452148030976[233] = 0;
   out_4365735452148030976[234] = 0;
   out_4365735452148030976[235] = 0;
   out_4365735452148030976[236] = 0;
   out_4365735452148030976[237] = 0;
   out_4365735452148030976[238] = 0;
   out_4365735452148030976[239] = 0;
   out_4365735452148030976[240] = 0;
   out_4365735452148030976[241] = 1.0;
   out_4365735452148030976[242] = 0;
   out_4365735452148030976[243] = 0;
   out_4365735452148030976[244] = 0;
   out_4365735452148030976[245] = 0;
   out_4365735452148030976[246] = 0;
   out_4365735452148030976[247] = 0;
   out_4365735452148030976[248] = 0;
   out_4365735452148030976[249] = 0;
   out_4365735452148030976[250] = 0;
   out_4365735452148030976[251] = 0;
   out_4365735452148030976[252] = 0;
   out_4365735452148030976[253] = 0;
   out_4365735452148030976[254] = 0;
   out_4365735452148030976[255] = 0;
   out_4365735452148030976[256] = 0;
   out_4365735452148030976[257] = 0;
   out_4365735452148030976[258] = 0;
   out_4365735452148030976[259] = 0;
   out_4365735452148030976[260] = 0;
   out_4365735452148030976[261] = 0;
   out_4365735452148030976[262] = 0;
   out_4365735452148030976[263] = 1.0;
   out_4365735452148030976[264] = 0;
   out_4365735452148030976[265] = 0;
   out_4365735452148030976[266] = 0;
   out_4365735452148030976[267] = 0;
   out_4365735452148030976[268] = 0;
   out_4365735452148030976[269] = 0;
   out_4365735452148030976[270] = 0;
   out_4365735452148030976[271] = 0;
   out_4365735452148030976[272] = 0;
   out_4365735452148030976[273] = 0;
   out_4365735452148030976[274] = 0;
   out_4365735452148030976[275] = 0;
   out_4365735452148030976[276] = 0;
   out_4365735452148030976[277] = 0;
   out_4365735452148030976[278] = 0;
   out_4365735452148030976[279] = 0;
   out_4365735452148030976[280] = 0;
   out_4365735452148030976[281] = 0;
   out_4365735452148030976[282] = 0;
   out_4365735452148030976[283] = 0;
   out_4365735452148030976[284] = 0;
   out_4365735452148030976[285] = 1.0;
   out_4365735452148030976[286] = 0;
   out_4365735452148030976[287] = 0;
   out_4365735452148030976[288] = 0;
   out_4365735452148030976[289] = 0;
   out_4365735452148030976[290] = 0;
   out_4365735452148030976[291] = 0;
   out_4365735452148030976[292] = 0;
   out_4365735452148030976[293] = 0;
   out_4365735452148030976[294] = 0;
   out_4365735452148030976[295] = 0;
   out_4365735452148030976[296] = 0;
   out_4365735452148030976[297] = 0;
   out_4365735452148030976[298] = 0;
   out_4365735452148030976[299] = 0;
   out_4365735452148030976[300] = 0;
   out_4365735452148030976[301] = 0;
   out_4365735452148030976[302] = 0;
   out_4365735452148030976[303] = 0;
   out_4365735452148030976[304] = 0;
   out_4365735452148030976[305] = 0;
   out_4365735452148030976[306] = 0;
   out_4365735452148030976[307] = 1.0;
   out_4365735452148030976[308] = 0;
   out_4365735452148030976[309] = 0;
   out_4365735452148030976[310] = 0;
   out_4365735452148030976[311] = 0;
   out_4365735452148030976[312] = 0;
   out_4365735452148030976[313] = 0;
   out_4365735452148030976[314] = 0;
   out_4365735452148030976[315] = 0;
   out_4365735452148030976[316] = 0;
   out_4365735452148030976[317] = 0;
   out_4365735452148030976[318] = 0;
   out_4365735452148030976[319] = 0;
   out_4365735452148030976[320] = 0;
   out_4365735452148030976[321] = 0;
   out_4365735452148030976[322] = 0;
   out_4365735452148030976[323] = 0;
   out_4365735452148030976[324] = 0;
   out_4365735452148030976[325] = 0;
   out_4365735452148030976[326] = 0;
   out_4365735452148030976[327] = 0;
   out_4365735452148030976[328] = 0;
   out_4365735452148030976[329] = 1.0;
   out_4365735452148030976[330] = 0;
   out_4365735452148030976[331] = 0;
   out_4365735452148030976[332] = 0;
   out_4365735452148030976[333] = 0;
   out_4365735452148030976[334] = 0;
   out_4365735452148030976[335] = 0;
   out_4365735452148030976[336] = 0;
   out_4365735452148030976[337] = 0;
   out_4365735452148030976[338] = 0;
   out_4365735452148030976[339] = 0;
   out_4365735452148030976[340] = 0;
   out_4365735452148030976[341] = 0;
   out_4365735452148030976[342] = 0;
   out_4365735452148030976[343] = 0;
   out_4365735452148030976[344] = 0;
   out_4365735452148030976[345] = 0;
   out_4365735452148030976[346] = 0;
   out_4365735452148030976[347] = 0;
   out_4365735452148030976[348] = 0;
   out_4365735452148030976[349] = 0;
   out_4365735452148030976[350] = 0;
   out_4365735452148030976[351] = 1.0;
   out_4365735452148030976[352] = 0;
   out_4365735452148030976[353] = 0;
   out_4365735452148030976[354] = 0;
   out_4365735452148030976[355] = 0;
   out_4365735452148030976[356] = 0;
   out_4365735452148030976[357] = 0;
   out_4365735452148030976[358] = 0;
   out_4365735452148030976[359] = 0;
   out_4365735452148030976[360] = 0;
   out_4365735452148030976[361] = 0;
   out_4365735452148030976[362] = 0;
   out_4365735452148030976[363] = 0;
   out_4365735452148030976[364] = 0;
   out_4365735452148030976[365] = 0;
   out_4365735452148030976[366] = 0;
   out_4365735452148030976[367] = 0;
   out_4365735452148030976[368] = 0;
   out_4365735452148030976[369] = 0;
   out_4365735452148030976[370] = 0;
   out_4365735452148030976[371] = 0;
   out_4365735452148030976[372] = 0;
   out_4365735452148030976[373] = 1.0;
   out_4365735452148030976[374] = 0;
   out_4365735452148030976[375] = 0;
   out_4365735452148030976[376] = 0;
   out_4365735452148030976[377] = 0;
   out_4365735452148030976[378] = 0;
   out_4365735452148030976[379] = 0;
   out_4365735452148030976[380] = 0;
   out_4365735452148030976[381] = 0;
   out_4365735452148030976[382] = 0;
   out_4365735452148030976[383] = 0;
   out_4365735452148030976[384] = 0;
   out_4365735452148030976[385] = 0;
   out_4365735452148030976[386] = 0;
   out_4365735452148030976[387] = 0;
   out_4365735452148030976[388] = 0;
   out_4365735452148030976[389] = 0;
   out_4365735452148030976[390] = 0;
   out_4365735452148030976[391] = 0;
   out_4365735452148030976[392] = 0;
   out_4365735452148030976[393] = 0;
   out_4365735452148030976[394] = 0;
   out_4365735452148030976[395] = 1.0;
   out_4365735452148030976[396] = 0;
   out_4365735452148030976[397] = 0;
   out_4365735452148030976[398] = 0;
   out_4365735452148030976[399] = 0;
   out_4365735452148030976[400] = 0;
   out_4365735452148030976[401] = 0;
   out_4365735452148030976[402] = 0;
   out_4365735452148030976[403] = 0;
   out_4365735452148030976[404] = 0;
   out_4365735452148030976[405] = 0;
   out_4365735452148030976[406] = 0;
   out_4365735452148030976[407] = 0;
   out_4365735452148030976[408] = 0;
   out_4365735452148030976[409] = 0;
   out_4365735452148030976[410] = 0;
   out_4365735452148030976[411] = 0;
   out_4365735452148030976[412] = 0;
   out_4365735452148030976[413] = 0;
   out_4365735452148030976[414] = 0;
   out_4365735452148030976[415] = 0;
   out_4365735452148030976[416] = 0;
   out_4365735452148030976[417] = 1.0;
   out_4365735452148030976[418] = 0;
   out_4365735452148030976[419] = 0;
   out_4365735452148030976[420] = 0;
   out_4365735452148030976[421] = 0;
   out_4365735452148030976[422] = 0;
   out_4365735452148030976[423] = 0;
   out_4365735452148030976[424] = 0;
   out_4365735452148030976[425] = 0;
   out_4365735452148030976[426] = 0;
   out_4365735452148030976[427] = 0;
   out_4365735452148030976[428] = 0;
   out_4365735452148030976[429] = 0;
   out_4365735452148030976[430] = 0;
   out_4365735452148030976[431] = 0;
   out_4365735452148030976[432] = 0;
   out_4365735452148030976[433] = 0;
   out_4365735452148030976[434] = 0;
   out_4365735452148030976[435] = 0;
   out_4365735452148030976[436] = 0;
   out_4365735452148030976[437] = 0;
   out_4365735452148030976[438] = 0;
   out_4365735452148030976[439] = 1.0;
   out_4365735452148030976[440] = 0;
   out_4365735452148030976[441] = 0;
   out_4365735452148030976[442] = 0;
   out_4365735452148030976[443] = 0;
   out_4365735452148030976[444] = 0;
   out_4365735452148030976[445] = 0;
   out_4365735452148030976[446] = 0;
   out_4365735452148030976[447] = 0;
   out_4365735452148030976[448] = 0;
   out_4365735452148030976[449] = 0;
   out_4365735452148030976[450] = 0;
   out_4365735452148030976[451] = 0;
   out_4365735452148030976[452] = 0;
   out_4365735452148030976[453] = 0;
   out_4365735452148030976[454] = 0;
   out_4365735452148030976[455] = 0;
   out_4365735452148030976[456] = 0;
   out_4365735452148030976[457] = 0;
   out_4365735452148030976[458] = 0;
   out_4365735452148030976[459] = 0;
   out_4365735452148030976[460] = 0;
   out_4365735452148030976[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7233734678308439105) {
   out_7233734678308439105[0] = dt*state[7] + state[0];
   out_7233734678308439105[1] = dt*state[8] + state[1];
   out_7233734678308439105[2] = dt*state[9] + state[2];
   out_7233734678308439105[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7233734678308439105[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7233734678308439105[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7233734678308439105[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7233734678308439105[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7233734678308439105[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7233734678308439105[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7233734678308439105[10] = state[10];
   out_7233734678308439105[11] = state[11];
   out_7233734678308439105[12] = state[12];
   out_7233734678308439105[13] = state[13];
   out_7233734678308439105[14] = state[14];
   out_7233734678308439105[15] = state[15];
   out_7233734678308439105[16] = state[16];
   out_7233734678308439105[17] = state[17];
   out_7233734678308439105[18] = state[18];
   out_7233734678308439105[19] = state[19];
   out_7233734678308439105[20] = state[20];
   out_7233734678308439105[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7186407748472172171) {
   out_7186407748472172171[0] = 1;
   out_7186407748472172171[1] = 0;
   out_7186407748472172171[2] = 0;
   out_7186407748472172171[3] = 0;
   out_7186407748472172171[4] = 0;
   out_7186407748472172171[5] = 0;
   out_7186407748472172171[6] = dt;
   out_7186407748472172171[7] = 0;
   out_7186407748472172171[8] = 0;
   out_7186407748472172171[9] = 0;
   out_7186407748472172171[10] = 0;
   out_7186407748472172171[11] = 0;
   out_7186407748472172171[12] = 0;
   out_7186407748472172171[13] = 0;
   out_7186407748472172171[14] = 0;
   out_7186407748472172171[15] = 0;
   out_7186407748472172171[16] = 0;
   out_7186407748472172171[17] = 0;
   out_7186407748472172171[18] = 0;
   out_7186407748472172171[19] = 0;
   out_7186407748472172171[20] = 0;
   out_7186407748472172171[21] = 0;
   out_7186407748472172171[22] = 1;
   out_7186407748472172171[23] = 0;
   out_7186407748472172171[24] = 0;
   out_7186407748472172171[25] = 0;
   out_7186407748472172171[26] = 0;
   out_7186407748472172171[27] = 0;
   out_7186407748472172171[28] = dt;
   out_7186407748472172171[29] = 0;
   out_7186407748472172171[30] = 0;
   out_7186407748472172171[31] = 0;
   out_7186407748472172171[32] = 0;
   out_7186407748472172171[33] = 0;
   out_7186407748472172171[34] = 0;
   out_7186407748472172171[35] = 0;
   out_7186407748472172171[36] = 0;
   out_7186407748472172171[37] = 0;
   out_7186407748472172171[38] = 0;
   out_7186407748472172171[39] = 0;
   out_7186407748472172171[40] = 0;
   out_7186407748472172171[41] = 0;
   out_7186407748472172171[42] = 0;
   out_7186407748472172171[43] = 0;
   out_7186407748472172171[44] = 1;
   out_7186407748472172171[45] = 0;
   out_7186407748472172171[46] = 0;
   out_7186407748472172171[47] = 0;
   out_7186407748472172171[48] = 0;
   out_7186407748472172171[49] = 0;
   out_7186407748472172171[50] = dt;
   out_7186407748472172171[51] = 0;
   out_7186407748472172171[52] = 0;
   out_7186407748472172171[53] = 0;
   out_7186407748472172171[54] = 0;
   out_7186407748472172171[55] = 0;
   out_7186407748472172171[56] = 0;
   out_7186407748472172171[57] = 0;
   out_7186407748472172171[58] = 0;
   out_7186407748472172171[59] = 0;
   out_7186407748472172171[60] = 0;
   out_7186407748472172171[61] = 0;
   out_7186407748472172171[62] = 0;
   out_7186407748472172171[63] = 0;
   out_7186407748472172171[64] = 0;
   out_7186407748472172171[65] = 0;
   out_7186407748472172171[66] = 1;
   out_7186407748472172171[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7186407748472172171[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7186407748472172171[69] = 0;
   out_7186407748472172171[70] = 0;
   out_7186407748472172171[71] = 0;
   out_7186407748472172171[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7186407748472172171[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7186407748472172171[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7186407748472172171[75] = 0;
   out_7186407748472172171[76] = 0;
   out_7186407748472172171[77] = 0;
   out_7186407748472172171[78] = 0;
   out_7186407748472172171[79] = 0;
   out_7186407748472172171[80] = 0;
   out_7186407748472172171[81] = 0;
   out_7186407748472172171[82] = 0;
   out_7186407748472172171[83] = 0;
   out_7186407748472172171[84] = 0;
   out_7186407748472172171[85] = 0;
   out_7186407748472172171[86] = 0;
   out_7186407748472172171[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7186407748472172171[88] = 1;
   out_7186407748472172171[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7186407748472172171[90] = 0;
   out_7186407748472172171[91] = 0;
   out_7186407748472172171[92] = 0;
   out_7186407748472172171[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7186407748472172171[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7186407748472172171[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7186407748472172171[96] = 0;
   out_7186407748472172171[97] = 0;
   out_7186407748472172171[98] = 0;
   out_7186407748472172171[99] = 0;
   out_7186407748472172171[100] = 0;
   out_7186407748472172171[101] = 0;
   out_7186407748472172171[102] = 0;
   out_7186407748472172171[103] = 0;
   out_7186407748472172171[104] = 0;
   out_7186407748472172171[105] = 0;
   out_7186407748472172171[106] = 0;
   out_7186407748472172171[107] = 0;
   out_7186407748472172171[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7186407748472172171[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7186407748472172171[110] = 1;
   out_7186407748472172171[111] = 0;
   out_7186407748472172171[112] = 0;
   out_7186407748472172171[113] = 0;
   out_7186407748472172171[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7186407748472172171[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7186407748472172171[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7186407748472172171[117] = 0;
   out_7186407748472172171[118] = 0;
   out_7186407748472172171[119] = 0;
   out_7186407748472172171[120] = 0;
   out_7186407748472172171[121] = 0;
   out_7186407748472172171[122] = 0;
   out_7186407748472172171[123] = 0;
   out_7186407748472172171[124] = 0;
   out_7186407748472172171[125] = 0;
   out_7186407748472172171[126] = 0;
   out_7186407748472172171[127] = 0;
   out_7186407748472172171[128] = 0;
   out_7186407748472172171[129] = 0;
   out_7186407748472172171[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7186407748472172171[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7186407748472172171[132] = 1;
   out_7186407748472172171[133] = 0;
   out_7186407748472172171[134] = 0;
   out_7186407748472172171[135] = 0;
   out_7186407748472172171[136] = 0;
   out_7186407748472172171[137] = 0;
   out_7186407748472172171[138] = 0;
   out_7186407748472172171[139] = 0;
   out_7186407748472172171[140] = 0;
   out_7186407748472172171[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7186407748472172171[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7186407748472172171[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7186407748472172171[144] = 0;
   out_7186407748472172171[145] = 0;
   out_7186407748472172171[146] = 0;
   out_7186407748472172171[147] = 0;
   out_7186407748472172171[148] = 0;
   out_7186407748472172171[149] = 0;
   out_7186407748472172171[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7186407748472172171[151] = 0;
   out_7186407748472172171[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7186407748472172171[153] = 0;
   out_7186407748472172171[154] = 1;
   out_7186407748472172171[155] = 0;
   out_7186407748472172171[156] = 0;
   out_7186407748472172171[157] = 0;
   out_7186407748472172171[158] = 0;
   out_7186407748472172171[159] = 0;
   out_7186407748472172171[160] = 0;
   out_7186407748472172171[161] = 0;
   out_7186407748472172171[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7186407748472172171[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7186407748472172171[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7186407748472172171[165] = 0;
   out_7186407748472172171[166] = 0;
   out_7186407748472172171[167] = 0;
   out_7186407748472172171[168] = 0;
   out_7186407748472172171[169] = 0;
   out_7186407748472172171[170] = 0;
   out_7186407748472172171[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7186407748472172171[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7186407748472172171[173] = 0;
   out_7186407748472172171[174] = 0;
   out_7186407748472172171[175] = 0;
   out_7186407748472172171[176] = 1;
   out_7186407748472172171[177] = 0;
   out_7186407748472172171[178] = 0;
   out_7186407748472172171[179] = 0;
   out_7186407748472172171[180] = 0;
   out_7186407748472172171[181] = 0;
   out_7186407748472172171[182] = 0;
   out_7186407748472172171[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7186407748472172171[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7186407748472172171[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7186407748472172171[186] = 0;
   out_7186407748472172171[187] = 0;
   out_7186407748472172171[188] = 0;
   out_7186407748472172171[189] = 0;
   out_7186407748472172171[190] = 0;
   out_7186407748472172171[191] = 0;
   out_7186407748472172171[192] = 0;
   out_7186407748472172171[193] = 0;
   out_7186407748472172171[194] = 0;
   out_7186407748472172171[195] = 0;
   out_7186407748472172171[196] = 0;
   out_7186407748472172171[197] = 0;
   out_7186407748472172171[198] = 1;
   out_7186407748472172171[199] = 0;
   out_7186407748472172171[200] = 0;
   out_7186407748472172171[201] = 0;
   out_7186407748472172171[202] = 0;
   out_7186407748472172171[203] = 0;
   out_7186407748472172171[204] = 0;
   out_7186407748472172171[205] = 0;
   out_7186407748472172171[206] = 0;
   out_7186407748472172171[207] = 0;
   out_7186407748472172171[208] = 0;
   out_7186407748472172171[209] = 0;
   out_7186407748472172171[210] = 0;
   out_7186407748472172171[211] = 0;
   out_7186407748472172171[212] = 0;
   out_7186407748472172171[213] = 0;
   out_7186407748472172171[214] = 0;
   out_7186407748472172171[215] = 0;
   out_7186407748472172171[216] = 0;
   out_7186407748472172171[217] = 0;
   out_7186407748472172171[218] = 0;
   out_7186407748472172171[219] = 0;
   out_7186407748472172171[220] = 1;
   out_7186407748472172171[221] = 0;
   out_7186407748472172171[222] = 0;
   out_7186407748472172171[223] = 0;
   out_7186407748472172171[224] = 0;
   out_7186407748472172171[225] = 0;
   out_7186407748472172171[226] = 0;
   out_7186407748472172171[227] = 0;
   out_7186407748472172171[228] = 0;
   out_7186407748472172171[229] = 0;
   out_7186407748472172171[230] = 0;
   out_7186407748472172171[231] = 0;
   out_7186407748472172171[232] = 0;
   out_7186407748472172171[233] = 0;
   out_7186407748472172171[234] = 0;
   out_7186407748472172171[235] = 0;
   out_7186407748472172171[236] = 0;
   out_7186407748472172171[237] = 0;
   out_7186407748472172171[238] = 0;
   out_7186407748472172171[239] = 0;
   out_7186407748472172171[240] = 0;
   out_7186407748472172171[241] = 0;
   out_7186407748472172171[242] = 1;
   out_7186407748472172171[243] = 0;
   out_7186407748472172171[244] = 0;
   out_7186407748472172171[245] = 0;
   out_7186407748472172171[246] = 0;
   out_7186407748472172171[247] = 0;
   out_7186407748472172171[248] = 0;
   out_7186407748472172171[249] = 0;
   out_7186407748472172171[250] = 0;
   out_7186407748472172171[251] = 0;
   out_7186407748472172171[252] = 0;
   out_7186407748472172171[253] = 0;
   out_7186407748472172171[254] = 0;
   out_7186407748472172171[255] = 0;
   out_7186407748472172171[256] = 0;
   out_7186407748472172171[257] = 0;
   out_7186407748472172171[258] = 0;
   out_7186407748472172171[259] = 0;
   out_7186407748472172171[260] = 0;
   out_7186407748472172171[261] = 0;
   out_7186407748472172171[262] = 0;
   out_7186407748472172171[263] = 0;
   out_7186407748472172171[264] = 1;
   out_7186407748472172171[265] = 0;
   out_7186407748472172171[266] = 0;
   out_7186407748472172171[267] = 0;
   out_7186407748472172171[268] = 0;
   out_7186407748472172171[269] = 0;
   out_7186407748472172171[270] = 0;
   out_7186407748472172171[271] = 0;
   out_7186407748472172171[272] = 0;
   out_7186407748472172171[273] = 0;
   out_7186407748472172171[274] = 0;
   out_7186407748472172171[275] = 0;
   out_7186407748472172171[276] = 0;
   out_7186407748472172171[277] = 0;
   out_7186407748472172171[278] = 0;
   out_7186407748472172171[279] = 0;
   out_7186407748472172171[280] = 0;
   out_7186407748472172171[281] = 0;
   out_7186407748472172171[282] = 0;
   out_7186407748472172171[283] = 0;
   out_7186407748472172171[284] = 0;
   out_7186407748472172171[285] = 0;
   out_7186407748472172171[286] = 1;
   out_7186407748472172171[287] = 0;
   out_7186407748472172171[288] = 0;
   out_7186407748472172171[289] = 0;
   out_7186407748472172171[290] = 0;
   out_7186407748472172171[291] = 0;
   out_7186407748472172171[292] = 0;
   out_7186407748472172171[293] = 0;
   out_7186407748472172171[294] = 0;
   out_7186407748472172171[295] = 0;
   out_7186407748472172171[296] = 0;
   out_7186407748472172171[297] = 0;
   out_7186407748472172171[298] = 0;
   out_7186407748472172171[299] = 0;
   out_7186407748472172171[300] = 0;
   out_7186407748472172171[301] = 0;
   out_7186407748472172171[302] = 0;
   out_7186407748472172171[303] = 0;
   out_7186407748472172171[304] = 0;
   out_7186407748472172171[305] = 0;
   out_7186407748472172171[306] = 0;
   out_7186407748472172171[307] = 0;
   out_7186407748472172171[308] = 1;
   out_7186407748472172171[309] = 0;
   out_7186407748472172171[310] = 0;
   out_7186407748472172171[311] = 0;
   out_7186407748472172171[312] = 0;
   out_7186407748472172171[313] = 0;
   out_7186407748472172171[314] = 0;
   out_7186407748472172171[315] = 0;
   out_7186407748472172171[316] = 0;
   out_7186407748472172171[317] = 0;
   out_7186407748472172171[318] = 0;
   out_7186407748472172171[319] = 0;
   out_7186407748472172171[320] = 0;
   out_7186407748472172171[321] = 0;
   out_7186407748472172171[322] = 0;
   out_7186407748472172171[323] = 0;
   out_7186407748472172171[324] = 0;
   out_7186407748472172171[325] = 0;
   out_7186407748472172171[326] = 0;
   out_7186407748472172171[327] = 0;
   out_7186407748472172171[328] = 0;
   out_7186407748472172171[329] = 0;
   out_7186407748472172171[330] = 1;
   out_7186407748472172171[331] = 0;
   out_7186407748472172171[332] = 0;
   out_7186407748472172171[333] = 0;
   out_7186407748472172171[334] = 0;
   out_7186407748472172171[335] = 0;
   out_7186407748472172171[336] = 0;
   out_7186407748472172171[337] = 0;
   out_7186407748472172171[338] = 0;
   out_7186407748472172171[339] = 0;
   out_7186407748472172171[340] = 0;
   out_7186407748472172171[341] = 0;
   out_7186407748472172171[342] = 0;
   out_7186407748472172171[343] = 0;
   out_7186407748472172171[344] = 0;
   out_7186407748472172171[345] = 0;
   out_7186407748472172171[346] = 0;
   out_7186407748472172171[347] = 0;
   out_7186407748472172171[348] = 0;
   out_7186407748472172171[349] = 0;
   out_7186407748472172171[350] = 0;
   out_7186407748472172171[351] = 0;
   out_7186407748472172171[352] = 1;
   out_7186407748472172171[353] = 0;
   out_7186407748472172171[354] = 0;
   out_7186407748472172171[355] = 0;
   out_7186407748472172171[356] = 0;
   out_7186407748472172171[357] = 0;
   out_7186407748472172171[358] = 0;
   out_7186407748472172171[359] = 0;
   out_7186407748472172171[360] = 0;
   out_7186407748472172171[361] = 0;
   out_7186407748472172171[362] = 0;
   out_7186407748472172171[363] = 0;
   out_7186407748472172171[364] = 0;
   out_7186407748472172171[365] = 0;
   out_7186407748472172171[366] = 0;
   out_7186407748472172171[367] = 0;
   out_7186407748472172171[368] = 0;
   out_7186407748472172171[369] = 0;
   out_7186407748472172171[370] = 0;
   out_7186407748472172171[371] = 0;
   out_7186407748472172171[372] = 0;
   out_7186407748472172171[373] = 0;
   out_7186407748472172171[374] = 1;
   out_7186407748472172171[375] = 0;
   out_7186407748472172171[376] = 0;
   out_7186407748472172171[377] = 0;
   out_7186407748472172171[378] = 0;
   out_7186407748472172171[379] = 0;
   out_7186407748472172171[380] = 0;
   out_7186407748472172171[381] = 0;
   out_7186407748472172171[382] = 0;
   out_7186407748472172171[383] = 0;
   out_7186407748472172171[384] = 0;
   out_7186407748472172171[385] = 0;
   out_7186407748472172171[386] = 0;
   out_7186407748472172171[387] = 0;
   out_7186407748472172171[388] = 0;
   out_7186407748472172171[389] = 0;
   out_7186407748472172171[390] = 0;
   out_7186407748472172171[391] = 0;
   out_7186407748472172171[392] = 0;
   out_7186407748472172171[393] = 0;
   out_7186407748472172171[394] = 0;
   out_7186407748472172171[395] = 0;
   out_7186407748472172171[396] = 1;
   out_7186407748472172171[397] = 0;
   out_7186407748472172171[398] = 0;
   out_7186407748472172171[399] = 0;
   out_7186407748472172171[400] = 0;
   out_7186407748472172171[401] = 0;
   out_7186407748472172171[402] = 0;
   out_7186407748472172171[403] = 0;
   out_7186407748472172171[404] = 0;
   out_7186407748472172171[405] = 0;
   out_7186407748472172171[406] = 0;
   out_7186407748472172171[407] = 0;
   out_7186407748472172171[408] = 0;
   out_7186407748472172171[409] = 0;
   out_7186407748472172171[410] = 0;
   out_7186407748472172171[411] = 0;
   out_7186407748472172171[412] = 0;
   out_7186407748472172171[413] = 0;
   out_7186407748472172171[414] = 0;
   out_7186407748472172171[415] = 0;
   out_7186407748472172171[416] = 0;
   out_7186407748472172171[417] = 0;
   out_7186407748472172171[418] = 1;
   out_7186407748472172171[419] = 0;
   out_7186407748472172171[420] = 0;
   out_7186407748472172171[421] = 0;
   out_7186407748472172171[422] = 0;
   out_7186407748472172171[423] = 0;
   out_7186407748472172171[424] = 0;
   out_7186407748472172171[425] = 0;
   out_7186407748472172171[426] = 0;
   out_7186407748472172171[427] = 0;
   out_7186407748472172171[428] = 0;
   out_7186407748472172171[429] = 0;
   out_7186407748472172171[430] = 0;
   out_7186407748472172171[431] = 0;
   out_7186407748472172171[432] = 0;
   out_7186407748472172171[433] = 0;
   out_7186407748472172171[434] = 0;
   out_7186407748472172171[435] = 0;
   out_7186407748472172171[436] = 0;
   out_7186407748472172171[437] = 0;
   out_7186407748472172171[438] = 0;
   out_7186407748472172171[439] = 0;
   out_7186407748472172171[440] = 1;
}
void h_4(double *state, double *unused, double *out_747960034792833697) {
   out_747960034792833697[0] = state[10] + state[13];
   out_747960034792833697[1] = state[11] + state[14];
   out_747960034792833697[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2836961591093737002) {
   out_2836961591093737002[0] = 0;
   out_2836961591093737002[1] = 0;
   out_2836961591093737002[2] = 0;
   out_2836961591093737002[3] = 0;
   out_2836961591093737002[4] = 0;
   out_2836961591093737002[5] = 0;
   out_2836961591093737002[6] = 0;
   out_2836961591093737002[7] = 0;
   out_2836961591093737002[8] = 0;
   out_2836961591093737002[9] = 0;
   out_2836961591093737002[10] = 1;
   out_2836961591093737002[11] = 0;
   out_2836961591093737002[12] = 0;
   out_2836961591093737002[13] = 1;
   out_2836961591093737002[14] = 0;
   out_2836961591093737002[15] = 0;
   out_2836961591093737002[16] = 0;
   out_2836961591093737002[17] = 0;
   out_2836961591093737002[18] = 0;
   out_2836961591093737002[19] = 0;
   out_2836961591093737002[20] = 0;
   out_2836961591093737002[21] = 0;
   out_2836961591093737002[22] = 0;
   out_2836961591093737002[23] = 0;
   out_2836961591093737002[24] = 0;
   out_2836961591093737002[25] = 0;
   out_2836961591093737002[26] = 0;
   out_2836961591093737002[27] = 0;
   out_2836961591093737002[28] = 0;
   out_2836961591093737002[29] = 0;
   out_2836961591093737002[30] = 0;
   out_2836961591093737002[31] = 0;
   out_2836961591093737002[32] = 0;
   out_2836961591093737002[33] = 1;
   out_2836961591093737002[34] = 0;
   out_2836961591093737002[35] = 0;
   out_2836961591093737002[36] = 1;
   out_2836961591093737002[37] = 0;
   out_2836961591093737002[38] = 0;
   out_2836961591093737002[39] = 0;
   out_2836961591093737002[40] = 0;
   out_2836961591093737002[41] = 0;
   out_2836961591093737002[42] = 0;
   out_2836961591093737002[43] = 0;
   out_2836961591093737002[44] = 0;
   out_2836961591093737002[45] = 0;
   out_2836961591093737002[46] = 0;
   out_2836961591093737002[47] = 0;
   out_2836961591093737002[48] = 0;
   out_2836961591093737002[49] = 0;
   out_2836961591093737002[50] = 0;
   out_2836961591093737002[51] = 0;
   out_2836961591093737002[52] = 0;
   out_2836961591093737002[53] = 0;
   out_2836961591093737002[54] = 0;
   out_2836961591093737002[55] = 0;
   out_2836961591093737002[56] = 1;
   out_2836961591093737002[57] = 0;
   out_2836961591093737002[58] = 0;
   out_2836961591093737002[59] = 1;
   out_2836961591093737002[60] = 0;
   out_2836961591093737002[61] = 0;
   out_2836961591093737002[62] = 0;
   out_2836961591093737002[63] = 0;
   out_2836961591093737002[64] = 0;
   out_2836961591093737002[65] = 0;
}
void h_9(double *state, double *unused, double *out_5143917515407147576) {
   out_5143917515407147576[0] = state[10];
   out_5143917515407147576[1] = state[11];
   out_5143917515407147576[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2595771944464146357) {
   out_2595771944464146357[0] = 0;
   out_2595771944464146357[1] = 0;
   out_2595771944464146357[2] = 0;
   out_2595771944464146357[3] = 0;
   out_2595771944464146357[4] = 0;
   out_2595771944464146357[5] = 0;
   out_2595771944464146357[6] = 0;
   out_2595771944464146357[7] = 0;
   out_2595771944464146357[8] = 0;
   out_2595771944464146357[9] = 0;
   out_2595771944464146357[10] = 1;
   out_2595771944464146357[11] = 0;
   out_2595771944464146357[12] = 0;
   out_2595771944464146357[13] = 0;
   out_2595771944464146357[14] = 0;
   out_2595771944464146357[15] = 0;
   out_2595771944464146357[16] = 0;
   out_2595771944464146357[17] = 0;
   out_2595771944464146357[18] = 0;
   out_2595771944464146357[19] = 0;
   out_2595771944464146357[20] = 0;
   out_2595771944464146357[21] = 0;
   out_2595771944464146357[22] = 0;
   out_2595771944464146357[23] = 0;
   out_2595771944464146357[24] = 0;
   out_2595771944464146357[25] = 0;
   out_2595771944464146357[26] = 0;
   out_2595771944464146357[27] = 0;
   out_2595771944464146357[28] = 0;
   out_2595771944464146357[29] = 0;
   out_2595771944464146357[30] = 0;
   out_2595771944464146357[31] = 0;
   out_2595771944464146357[32] = 0;
   out_2595771944464146357[33] = 1;
   out_2595771944464146357[34] = 0;
   out_2595771944464146357[35] = 0;
   out_2595771944464146357[36] = 0;
   out_2595771944464146357[37] = 0;
   out_2595771944464146357[38] = 0;
   out_2595771944464146357[39] = 0;
   out_2595771944464146357[40] = 0;
   out_2595771944464146357[41] = 0;
   out_2595771944464146357[42] = 0;
   out_2595771944464146357[43] = 0;
   out_2595771944464146357[44] = 0;
   out_2595771944464146357[45] = 0;
   out_2595771944464146357[46] = 0;
   out_2595771944464146357[47] = 0;
   out_2595771944464146357[48] = 0;
   out_2595771944464146357[49] = 0;
   out_2595771944464146357[50] = 0;
   out_2595771944464146357[51] = 0;
   out_2595771944464146357[52] = 0;
   out_2595771944464146357[53] = 0;
   out_2595771944464146357[54] = 0;
   out_2595771944464146357[55] = 0;
   out_2595771944464146357[56] = 1;
   out_2595771944464146357[57] = 0;
   out_2595771944464146357[58] = 0;
   out_2595771944464146357[59] = 0;
   out_2595771944464146357[60] = 0;
   out_2595771944464146357[61] = 0;
   out_2595771944464146357[62] = 0;
   out_2595771944464146357[63] = 0;
   out_2595771944464146357[64] = 0;
   out_2595771944464146357[65] = 0;
}
void h_10(double *state, double *unused, double *out_4990416931212113379) {
   out_4990416931212113379[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4990416931212113379[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4990416931212113379[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1563174650098063786) {
   out_1563174650098063786[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1563174650098063786[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1563174650098063786[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1563174650098063786[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1563174650098063786[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1563174650098063786[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1563174650098063786[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1563174650098063786[7] = 0;
   out_1563174650098063786[8] = 0;
   out_1563174650098063786[9] = 0;
   out_1563174650098063786[10] = 0;
   out_1563174650098063786[11] = 0;
   out_1563174650098063786[12] = 0;
   out_1563174650098063786[13] = 0;
   out_1563174650098063786[14] = 0;
   out_1563174650098063786[15] = 0;
   out_1563174650098063786[16] = 1;
   out_1563174650098063786[17] = 0;
   out_1563174650098063786[18] = 0;
   out_1563174650098063786[19] = 1;
   out_1563174650098063786[20] = 0;
   out_1563174650098063786[21] = 0;
   out_1563174650098063786[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1563174650098063786[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1563174650098063786[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1563174650098063786[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1563174650098063786[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1563174650098063786[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1563174650098063786[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1563174650098063786[29] = 0;
   out_1563174650098063786[30] = 0;
   out_1563174650098063786[31] = 0;
   out_1563174650098063786[32] = 0;
   out_1563174650098063786[33] = 0;
   out_1563174650098063786[34] = 0;
   out_1563174650098063786[35] = 0;
   out_1563174650098063786[36] = 0;
   out_1563174650098063786[37] = 0;
   out_1563174650098063786[38] = 0;
   out_1563174650098063786[39] = 1;
   out_1563174650098063786[40] = 0;
   out_1563174650098063786[41] = 0;
   out_1563174650098063786[42] = 1;
   out_1563174650098063786[43] = 0;
   out_1563174650098063786[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1563174650098063786[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1563174650098063786[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1563174650098063786[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1563174650098063786[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1563174650098063786[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1563174650098063786[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1563174650098063786[51] = 0;
   out_1563174650098063786[52] = 0;
   out_1563174650098063786[53] = 0;
   out_1563174650098063786[54] = 0;
   out_1563174650098063786[55] = 0;
   out_1563174650098063786[56] = 0;
   out_1563174650098063786[57] = 0;
   out_1563174650098063786[58] = 0;
   out_1563174650098063786[59] = 0;
   out_1563174650098063786[60] = 0;
   out_1563174650098063786[61] = 0;
   out_1563174650098063786[62] = 1;
   out_1563174650098063786[63] = 0;
   out_1563174650098063786[64] = 0;
   out_1563174650098063786[65] = 1;
}
void h_12(double *state, double *unused, double *out_8819626307844828718) {
   out_8819626307844828718[0] = state[0];
   out_8819626307844828718[1] = state[1];
   out_8819626307844828718[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2182494816938224793) {
   out_2182494816938224793[0] = 1;
   out_2182494816938224793[1] = 0;
   out_2182494816938224793[2] = 0;
   out_2182494816938224793[3] = 0;
   out_2182494816938224793[4] = 0;
   out_2182494816938224793[5] = 0;
   out_2182494816938224793[6] = 0;
   out_2182494816938224793[7] = 0;
   out_2182494816938224793[8] = 0;
   out_2182494816938224793[9] = 0;
   out_2182494816938224793[10] = 0;
   out_2182494816938224793[11] = 0;
   out_2182494816938224793[12] = 0;
   out_2182494816938224793[13] = 0;
   out_2182494816938224793[14] = 0;
   out_2182494816938224793[15] = 0;
   out_2182494816938224793[16] = 0;
   out_2182494816938224793[17] = 0;
   out_2182494816938224793[18] = 0;
   out_2182494816938224793[19] = 0;
   out_2182494816938224793[20] = 0;
   out_2182494816938224793[21] = 0;
   out_2182494816938224793[22] = 0;
   out_2182494816938224793[23] = 1;
   out_2182494816938224793[24] = 0;
   out_2182494816938224793[25] = 0;
   out_2182494816938224793[26] = 0;
   out_2182494816938224793[27] = 0;
   out_2182494816938224793[28] = 0;
   out_2182494816938224793[29] = 0;
   out_2182494816938224793[30] = 0;
   out_2182494816938224793[31] = 0;
   out_2182494816938224793[32] = 0;
   out_2182494816938224793[33] = 0;
   out_2182494816938224793[34] = 0;
   out_2182494816938224793[35] = 0;
   out_2182494816938224793[36] = 0;
   out_2182494816938224793[37] = 0;
   out_2182494816938224793[38] = 0;
   out_2182494816938224793[39] = 0;
   out_2182494816938224793[40] = 0;
   out_2182494816938224793[41] = 0;
   out_2182494816938224793[42] = 0;
   out_2182494816938224793[43] = 0;
   out_2182494816938224793[44] = 0;
   out_2182494816938224793[45] = 0;
   out_2182494816938224793[46] = 1;
   out_2182494816938224793[47] = 0;
   out_2182494816938224793[48] = 0;
   out_2182494816938224793[49] = 0;
   out_2182494816938224793[50] = 0;
   out_2182494816938224793[51] = 0;
   out_2182494816938224793[52] = 0;
   out_2182494816938224793[53] = 0;
   out_2182494816938224793[54] = 0;
   out_2182494816938224793[55] = 0;
   out_2182494816938224793[56] = 0;
   out_2182494816938224793[57] = 0;
   out_2182494816938224793[58] = 0;
   out_2182494816938224793[59] = 0;
   out_2182494816938224793[60] = 0;
   out_2182494816938224793[61] = 0;
   out_2182494816938224793[62] = 0;
   out_2182494816938224793[63] = 0;
   out_2182494816938224793[64] = 0;
   out_2182494816938224793[65] = 0;
}
void h_35(double *state, double *unused, double *out_2516966990548027135) {
   out_2516966990548027135[0] = state[7];
   out_2516966990548027135[1] = state[8];
   out_2516966990548027135[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4928057849263238502) {
   out_4928057849263238502[0] = 0;
   out_4928057849263238502[1] = 0;
   out_4928057849263238502[2] = 0;
   out_4928057849263238502[3] = 0;
   out_4928057849263238502[4] = 0;
   out_4928057849263238502[5] = 0;
   out_4928057849263238502[6] = 0;
   out_4928057849263238502[7] = 1;
   out_4928057849263238502[8] = 0;
   out_4928057849263238502[9] = 0;
   out_4928057849263238502[10] = 0;
   out_4928057849263238502[11] = 0;
   out_4928057849263238502[12] = 0;
   out_4928057849263238502[13] = 0;
   out_4928057849263238502[14] = 0;
   out_4928057849263238502[15] = 0;
   out_4928057849263238502[16] = 0;
   out_4928057849263238502[17] = 0;
   out_4928057849263238502[18] = 0;
   out_4928057849263238502[19] = 0;
   out_4928057849263238502[20] = 0;
   out_4928057849263238502[21] = 0;
   out_4928057849263238502[22] = 0;
   out_4928057849263238502[23] = 0;
   out_4928057849263238502[24] = 0;
   out_4928057849263238502[25] = 0;
   out_4928057849263238502[26] = 0;
   out_4928057849263238502[27] = 0;
   out_4928057849263238502[28] = 0;
   out_4928057849263238502[29] = 0;
   out_4928057849263238502[30] = 1;
   out_4928057849263238502[31] = 0;
   out_4928057849263238502[32] = 0;
   out_4928057849263238502[33] = 0;
   out_4928057849263238502[34] = 0;
   out_4928057849263238502[35] = 0;
   out_4928057849263238502[36] = 0;
   out_4928057849263238502[37] = 0;
   out_4928057849263238502[38] = 0;
   out_4928057849263238502[39] = 0;
   out_4928057849263238502[40] = 0;
   out_4928057849263238502[41] = 0;
   out_4928057849263238502[42] = 0;
   out_4928057849263238502[43] = 0;
   out_4928057849263238502[44] = 0;
   out_4928057849263238502[45] = 0;
   out_4928057849263238502[46] = 0;
   out_4928057849263238502[47] = 0;
   out_4928057849263238502[48] = 0;
   out_4928057849263238502[49] = 0;
   out_4928057849263238502[50] = 0;
   out_4928057849263238502[51] = 0;
   out_4928057849263238502[52] = 0;
   out_4928057849263238502[53] = 1;
   out_4928057849263238502[54] = 0;
   out_4928057849263238502[55] = 0;
   out_4928057849263238502[56] = 0;
   out_4928057849263238502[57] = 0;
   out_4928057849263238502[58] = 0;
   out_4928057849263238502[59] = 0;
   out_4928057849263238502[60] = 0;
   out_4928057849263238502[61] = 0;
   out_4928057849263238502[62] = 0;
   out_4928057849263238502[63] = 0;
   out_4928057849263238502[64] = 0;
   out_4928057849263238502[65] = 0;
}
void h_32(double *state, double *unused, double *out_5871713862586783818) {
   out_5871713862586783818[0] = state[3];
   out_5871713862586783818[1] = state[4];
   out_5871713862586783818[2] = state[5];
   out_5871713862586783818[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8161168332066886053) {
   out_8161168332066886053[0] = 0;
   out_8161168332066886053[1] = 0;
   out_8161168332066886053[2] = 0;
   out_8161168332066886053[3] = 1;
   out_8161168332066886053[4] = 0;
   out_8161168332066886053[5] = 0;
   out_8161168332066886053[6] = 0;
   out_8161168332066886053[7] = 0;
   out_8161168332066886053[8] = 0;
   out_8161168332066886053[9] = 0;
   out_8161168332066886053[10] = 0;
   out_8161168332066886053[11] = 0;
   out_8161168332066886053[12] = 0;
   out_8161168332066886053[13] = 0;
   out_8161168332066886053[14] = 0;
   out_8161168332066886053[15] = 0;
   out_8161168332066886053[16] = 0;
   out_8161168332066886053[17] = 0;
   out_8161168332066886053[18] = 0;
   out_8161168332066886053[19] = 0;
   out_8161168332066886053[20] = 0;
   out_8161168332066886053[21] = 0;
   out_8161168332066886053[22] = 0;
   out_8161168332066886053[23] = 0;
   out_8161168332066886053[24] = 0;
   out_8161168332066886053[25] = 0;
   out_8161168332066886053[26] = 1;
   out_8161168332066886053[27] = 0;
   out_8161168332066886053[28] = 0;
   out_8161168332066886053[29] = 0;
   out_8161168332066886053[30] = 0;
   out_8161168332066886053[31] = 0;
   out_8161168332066886053[32] = 0;
   out_8161168332066886053[33] = 0;
   out_8161168332066886053[34] = 0;
   out_8161168332066886053[35] = 0;
   out_8161168332066886053[36] = 0;
   out_8161168332066886053[37] = 0;
   out_8161168332066886053[38] = 0;
   out_8161168332066886053[39] = 0;
   out_8161168332066886053[40] = 0;
   out_8161168332066886053[41] = 0;
   out_8161168332066886053[42] = 0;
   out_8161168332066886053[43] = 0;
   out_8161168332066886053[44] = 0;
   out_8161168332066886053[45] = 0;
   out_8161168332066886053[46] = 0;
   out_8161168332066886053[47] = 0;
   out_8161168332066886053[48] = 0;
   out_8161168332066886053[49] = 1;
   out_8161168332066886053[50] = 0;
   out_8161168332066886053[51] = 0;
   out_8161168332066886053[52] = 0;
   out_8161168332066886053[53] = 0;
   out_8161168332066886053[54] = 0;
   out_8161168332066886053[55] = 0;
   out_8161168332066886053[56] = 0;
   out_8161168332066886053[57] = 0;
   out_8161168332066886053[58] = 0;
   out_8161168332066886053[59] = 0;
   out_8161168332066886053[60] = 0;
   out_8161168332066886053[61] = 0;
   out_8161168332066886053[62] = 0;
   out_8161168332066886053[63] = 0;
   out_8161168332066886053[64] = 0;
   out_8161168332066886053[65] = 0;
   out_8161168332066886053[66] = 0;
   out_8161168332066886053[67] = 0;
   out_8161168332066886053[68] = 0;
   out_8161168332066886053[69] = 0;
   out_8161168332066886053[70] = 0;
   out_8161168332066886053[71] = 0;
   out_8161168332066886053[72] = 1;
   out_8161168332066886053[73] = 0;
   out_8161168332066886053[74] = 0;
   out_8161168332066886053[75] = 0;
   out_8161168332066886053[76] = 0;
   out_8161168332066886053[77] = 0;
   out_8161168332066886053[78] = 0;
   out_8161168332066886053[79] = 0;
   out_8161168332066886053[80] = 0;
   out_8161168332066886053[81] = 0;
   out_8161168332066886053[82] = 0;
   out_8161168332066886053[83] = 0;
   out_8161168332066886053[84] = 0;
   out_8161168332066886053[85] = 0;
   out_8161168332066886053[86] = 0;
   out_8161168332066886053[87] = 0;
}
void h_13(double *state, double *unused, double *out_6162076028028181008) {
   out_6162076028028181008[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6162076028028181008[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6162076028028181008[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2827166593172103927) {
   out_2827166593172103927[0] = 0;
   out_2827166593172103927[1] = 0;
   out_2827166593172103927[2] = 0;
   out_2827166593172103927[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2827166593172103927[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2827166593172103927[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2827166593172103927[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2827166593172103927[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2827166593172103927[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2827166593172103927[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2827166593172103927[10] = 0;
   out_2827166593172103927[11] = 0;
   out_2827166593172103927[12] = 0;
   out_2827166593172103927[13] = 0;
   out_2827166593172103927[14] = 0;
   out_2827166593172103927[15] = 0;
   out_2827166593172103927[16] = 0;
   out_2827166593172103927[17] = 0;
   out_2827166593172103927[18] = 0;
   out_2827166593172103927[19] = 0;
   out_2827166593172103927[20] = 0;
   out_2827166593172103927[21] = 0;
   out_2827166593172103927[22] = 0;
   out_2827166593172103927[23] = 0;
   out_2827166593172103927[24] = 0;
   out_2827166593172103927[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2827166593172103927[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2827166593172103927[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2827166593172103927[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2827166593172103927[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2827166593172103927[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2827166593172103927[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2827166593172103927[32] = 0;
   out_2827166593172103927[33] = 0;
   out_2827166593172103927[34] = 0;
   out_2827166593172103927[35] = 0;
   out_2827166593172103927[36] = 0;
   out_2827166593172103927[37] = 0;
   out_2827166593172103927[38] = 0;
   out_2827166593172103927[39] = 0;
   out_2827166593172103927[40] = 0;
   out_2827166593172103927[41] = 0;
   out_2827166593172103927[42] = 0;
   out_2827166593172103927[43] = 0;
   out_2827166593172103927[44] = 0;
   out_2827166593172103927[45] = 0;
   out_2827166593172103927[46] = 0;
   out_2827166593172103927[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2827166593172103927[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2827166593172103927[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2827166593172103927[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2827166593172103927[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2827166593172103927[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2827166593172103927[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2827166593172103927[54] = 0;
   out_2827166593172103927[55] = 0;
   out_2827166593172103927[56] = 0;
   out_2827166593172103927[57] = 0;
   out_2827166593172103927[58] = 0;
   out_2827166593172103927[59] = 0;
   out_2827166593172103927[60] = 0;
   out_2827166593172103927[61] = 0;
   out_2827166593172103927[62] = 0;
   out_2827166593172103927[63] = 0;
   out_2827166593172103927[64] = 0;
   out_2827166593172103927[65] = 0;
}
void h_14(double *state, double *unused, double *out_5143917515407147576) {
   out_5143917515407147576[0] = state[10];
   out_5143917515407147576[1] = state[11];
   out_5143917515407147576[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2595771944464146357) {
   out_2595771944464146357[0] = 0;
   out_2595771944464146357[1] = 0;
   out_2595771944464146357[2] = 0;
   out_2595771944464146357[3] = 0;
   out_2595771944464146357[4] = 0;
   out_2595771944464146357[5] = 0;
   out_2595771944464146357[6] = 0;
   out_2595771944464146357[7] = 0;
   out_2595771944464146357[8] = 0;
   out_2595771944464146357[9] = 0;
   out_2595771944464146357[10] = 1;
   out_2595771944464146357[11] = 0;
   out_2595771944464146357[12] = 0;
   out_2595771944464146357[13] = 0;
   out_2595771944464146357[14] = 0;
   out_2595771944464146357[15] = 0;
   out_2595771944464146357[16] = 0;
   out_2595771944464146357[17] = 0;
   out_2595771944464146357[18] = 0;
   out_2595771944464146357[19] = 0;
   out_2595771944464146357[20] = 0;
   out_2595771944464146357[21] = 0;
   out_2595771944464146357[22] = 0;
   out_2595771944464146357[23] = 0;
   out_2595771944464146357[24] = 0;
   out_2595771944464146357[25] = 0;
   out_2595771944464146357[26] = 0;
   out_2595771944464146357[27] = 0;
   out_2595771944464146357[28] = 0;
   out_2595771944464146357[29] = 0;
   out_2595771944464146357[30] = 0;
   out_2595771944464146357[31] = 0;
   out_2595771944464146357[32] = 0;
   out_2595771944464146357[33] = 1;
   out_2595771944464146357[34] = 0;
   out_2595771944464146357[35] = 0;
   out_2595771944464146357[36] = 0;
   out_2595771944464146357[37] = 0;
   out_2595771944464146357[38] = 0;
   out_2595771944464146357[39] = 0;
   out_2595771944464146357[40] = 0;
   out_2595771944464146357[41] = 0;
   out_2595771944464146357[42] = 0;
   out_2595771944464146357[43] = 0;
   out_2595771944464146357[44] = 0;
   out_2595771944464146357[45] = 0;
   out_2595771944464146357[46] = 0;
   out_2595771944464146357[47] = 0;
   out_2595771944464146357[48] = 0;
   out_2595771944464146357[49] = 0;
   out_2595771944464146357[50] = 0;
   out_2595771944464146357[51] = 0;
   out_2595771944464146357[52] = 0;
   out_2595771944464146357[53] = 0;
   out_2595771944464146357[54] = 0;
   out_2595771944464146357[55] = 0;
   out_2595771944464146357[56] = 1;
   out_2595771944464146357[57] = 0;
   out_2595771944464146357[58] = 0;
   out_2595771944464146357[59] = 0;
   out_2595771944464146357[60] = 0;
   out_2595771944464146357[61] = 0;
   out_2595771944464146357[62] = 0;
   out_2595771944464146357[63] = 0;
   out_2595771944464146357[64] = 0;
   out_2595771944464146357[65] = 0;
}
void h_33(double *state, double *unused, double *out_1322511510347290919) {
   out_1322511510347290919[0] = state[16];
   out_1322511510347290919[1] = state[17];
   out_1322511510347290919[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8078614853902096106) {
   out_8078614853902096106[0] = 0;
   out_8078614853902096106[1] = 0;
   out_8078614853902096106[2] = 0;
   out_8078614853902096106[3] = 0;
   out_8078614853902096106[4] = 0;
   out_8078614853902096106[5] = 0;
   out_8078614853902096106[6] = 0;
   out_8078614853902096106[7] = 0;
   out_8078614853902096106[8] = 0;
   out_8078614853902096106[9] = 0;
   out_8078614853902096106[10] = 0;
   out_8078614853902096106[11] = 0;
   out_8078614853902096106[12] = 0;
   out_8078614853902096106[13] = 0;
   out_8078614853902096106[14] = 0;
   out_8078614853902096106[15] = 0;
   out_8078614853902096106[16] = 1;
   out_8078614853902096106[17] = 0;
   out_8078614853902096106[18] = 0;
   out_8078614853902096106[19] = 0;
   out_8078614853902096106[20] = 0;
   out_8078614853902096106[21] = 0;
   out_8078614853902096106[22] = 0;
   out_8078614853902096106[23] = 0;
   out_8078614853902096106[24] = 0;
   out_8078614853902096106[25] = 0;
   out_8078614853902096106[26] = 0;
   out_8078614853902096106[27] = 0;
   out_8078614853902096106[28] = 0;
   out_8078614853902096106[29] = 0;
   out_8078614853902096106[30] = 0;
   out_8078614853902096106[31] = 0;
   out_8078614853902096106[32] = 0;
   out_8078614853902096106[33] = 0;
   out_8078614853902096106[34] = 0;
   out_8078614853902096106[35] = 0;
   out_8078614853902096106[36] = 0;
   out_8078614853902096106[37] = 0;
   out_8078614853902096106[38] = 0;
   out_8078614853902096106[39] = 1;
   out_8078614853902096106[40] = 0;
   out_8078614853902096106[41] = 0;
   out_8078614853902096106[42] = 0;
   out_8078614853902096106[43] = 0;
   out_8078614853902096106[44] = 0;
   out_8078614853902096106[45] = 0;
   out_8078614853902096106[46] = 0;
   out_8078614853902096106[47] = 0;
   out_8078614853902096106[48] = 0;
   out_8078614853902096106[49] = 0;
   out_8078614853902096106[50] = 0;
   out_8078614853902096106[51] = 0;
   out_8078614853902096106[52] = 0;
   out_8078614853902096106[53] = 0;
   out_8078614853902096106[54] = 0;
   out_8078614853902096106[55] = 0;
   out_8078614853902096106[56] = 0;
   out_8078614853902096106[57] = 0;
   out_8078614853902096106[58] = 0;
   out_8078614853902096106[59] = 0;
   out_8078614853902096106[60] = 0;
   out_8078614853902096106[61] = 0;
   out_8078614853902096106[62] = 1;
   out_8078614853902096106[63] = 0;
   out_8078614853902096106[64] = 0;
   out_8078614853902096106[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6682464975442471769) {
  H(in_vec, out_6682464975442471769);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8729540985056067358) {
  err_fun(nom_x, delta_x, out_8729540985056067358);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4100406716172023109) {
  inv_err_fun(nom_x, true_x, out_4100406716172023109);
}
void live_H_mod_fun(double *state, double *out_4365735452148030976) {
  H_mod_fun(state, out_4365735452148030976);
}
void live_f_fun(double *state, double dt, double *out_7233734678308439105) {
  f_fun(state,  dt, out_7233734678308439105);
}
void live_F_fun(double *state, double dt, double *out_7186407748472172171) {
  F_fun(state,  dt, out_7186407748472172171);
}
void live_h_4(double *state, double *unused, double *out_747960034792833697) {
  h_4(state, unused, out_747960034792833697);
}
void live_H_4(double *state, double *unused, double *out_2836961591093737002) {
  H_4(state, unused, out_2836961591093737002);
}
void live_h_9(double *state, double *unused, double *out_5143917515407147576) {
  h_9(state, unused, out_5143917515407147576);
}
void live_H_9(double *state, double *unused, double *out_2595771944464146357) {
  H_9(state, unused, out_2595771944464146357);
}
void live_h_10(double *state, double *unused, double *out_4990416931212113379) {
  h_10(state, unused, out_4990416931212113379);
}
void live_H_10(double *state, double *unused, double *out_1563174650098063786) {
  H_10(state, unused, out_1563174650098063786);
}
void live_h_12(double *state, double *unused, double *out_8819626307844828718) {
  h_12(state, unused, out_8819626307844828718);
}
void live_H_12(double *state, double *unused, double *out_2182494816938224793) {
  H_12(state, unused, out_2182494816938224793);
}
void live_h_35(double *state, double *unused, double *out_2516966990548027135) {
  h_35(state, unused, out_2516966990548027135);
}
void live_H_35(double *state, double *unused, double *out_4928057849263238502) {
  H_35(state, unused, out_4928057849263238502);
}
void live_h_32(double *state, double *unused, double *out_5871713862586783818) {
  h_32(state, unused, out_5871713862586783818);
}
void live_H_32(double *state, double *unused, double *out_8161168332066886053) {
  H_32(state, unused, out_8161168332066886053);
}
void live_h_13(double *state, double *unused, double *out_6162076028028181008) {
  h_13(state, unused, out_6162076028028181008);
}
void live_H_13(double *state, double *unused, double *out_2827166593172103927) {
  H_13(state, unused, out_2827166593172103927);
}
void live_h_14(double *state, double *unused, double *out_5143917515407147576) {
  h_14(state, unused, out_5143917515407147576);
}
void live_H_14(double *state, double *unused, double *out_2595771944464146357) {
  H_14(state, unused, out_2595771944464146357);
}
void live_h_33(double *state, double *unused, double *out_1322511510347290919) {
  h_33(state, unused, out_1322511510347290919);
}
void live_H_33(double *state, double *unused, double *out_8078614853902096106) {
  H_33(state, unused, out_8078614853902096106);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
