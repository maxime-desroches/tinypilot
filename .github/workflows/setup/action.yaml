name: 'openpilot env setup'

inputs:
  is_retried:
    description: 'A mock param that asserts that this setup is for a retry operation'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - shell: bash
      if: ${{ inputs.is_retried == 'false' }}
      run: |
        echo "You should not run this action directly. Use setup-with-retry instead"
        exit 1

    # Setup and cache apt packages
    - name: Cache apt packages
      uses: actions/cache@v3
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-${{ hashFiles('**/install_ubuntu_dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends $(grep -oP 'sudo apt-get install -y --no-install-recommends \K.*' tools/install_ubuntu_dependencies.sh)

    # Setup and cache Python packages
    - name: Set up Python environment
      run: |
        sudo apt-get install -y python3-pip
        pip install --upgrade pip

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi

    # Checkout and prepare the working directory
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set Environment Variable
      run: echo "PYTHONPATH=${GITHUB_WORKSPACE}:${PYTHONPATH}" >> $GITHUB_ENV