name: 'openpilot env setup'

inputs:
  docker_hub_pat:
    description: 'Auth token for Docker Hub, required for BuildJet jobs'
    required: true
    default: ''
  is_retried:
    description: 'A mock param that asserts that we use the setup-with-retry instead of this action directly'
    required: false
    default: 'false'

  runs:
    using: "composite"
    steps:
      # Verify if the setup is retried using setup-with-retry
      - name: Verify Retry Setup
        shell: bash
        if: ${{ inputs.is_retried == 'false' }}
        run: |
          echo "This action should not run directly. Use setup-with-retry instead."
          exit 1

      # Perform git lfs pull if necessary, ensure condition checks for files existence
      - name: Git LFS Pull
        shell: bash
        run: git lfs pull
        if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}

      # Login to Docker Hub to avoid rate limiting on BuildJet
      - name: Login to Docker Hub
        shell: bash
        if: ${{ contains(runner.name, 'buildjet') }}
        run: |
          if [ -z "${{ inputs.docker_hub_pat }}" ]; then
            echo "Docker Hub PAT is required."
            exit 1
          fi
          docker login -u adeebshihadeh -p ${{ inputs.docker_hub_pat }}

      # Set up caching for faster builds, using more specific keys and restoration logic
      - name: Set Cache Dates
        shell: bash
        run: echo "CACHE_COMMIT_DATE=$(date +%Y-%m-%d-%H:%M)" >> $GITHUB_ENV

      - name: Restore Build Cache
        uses: actions/cache@v2
        with:
          path: .ci_cache/scons_cache
          key: ${{ runner.os }}-scons-${{ env.CACHE_COMMIT_DATE }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-scons-${{ env.CACHE_COMMIT_DATE }}
            ${{ runner.os }}-scons-

      # Normalize file permissions to ensure a consistent Docker build cache
      - name: Normalize File Permissions
        shell: bash
        run: |
          find . -type f -executable -not -perm 755 -exec chmod 755 {} \;
          find . -type f -not -executable -not -perm 644 -exec chmod 644 {} \;

      # Build Docker image
      - name: Build Docker Image
        shell: bash
        run: eval ${{ env.BUILD }}
        env:
          BUILD: docker build -t openpilot-env .